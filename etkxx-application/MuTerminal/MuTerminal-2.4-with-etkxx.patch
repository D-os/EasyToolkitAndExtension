diff -Nur MuTerm/etc/sample.mp.linux MuTerm_working/etc/sample.mp.linux
--- MuTerm/etc/sample.mp.linux	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/etc/sample.mp.linux	Fri May 11 23:46:09 2007
@@ -0,0 +1,25 @@
+"Cols" , "80"
+"Rows" , "25"
+"Half Font Famly" , "unifont"
+"Half Font Size" , "16"
+"Full Font Famly" , "unifont"
+"Full Font Size" , "16"
+"Text Foreground Color" , "  0,   0,   0"
+"Text Background Color" , "255, 255, 255"
+"Selection Foreground Color" , "255, 255, 255"
+"Selection Background Color" , "  0,   0,   0"
+"Cursor Foreground Color" , "255, 255, 255"
+"Cursor Background Color" , "  0,   0,   0"
+"IM Foreground Color" , "  0,   0,   0"
+"IM Background Color" , "152, 203, 255"
+"IM Selection Color" , "255, 152, 152"
+"Shell" , "/bin/sh -login"
+"Histry Size" , "500"
+"Text encoding" , "UTF-8"
+"Select Region Buttion" , "Button 1"
+"Paste Mouse Button" , "Button 2"
+"Submenu Mouse Button" , "Button 3"
+"Cursor Image" , "Hand cursor"
+"Drag'n Copy" , "0"
+"Language" , "English"
+"Input Method Aware" , "0"
diff -Nur MuTerm/etc/sample.mp.msys MuTerm_working/etc/sample.mp.msys
--- MuTerm/etc/sample.mp.msys	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/etc/sample.mp.msys	Fri May 11 12:29:45 2007
@@ -0,0 +1,25 @@
+"Cols" , "80"
+"Rows" , "25"
+"Half Font Famly" , "Terminal"
+"Half Font Size" , "12"
+"Full Font Famly" , "Terminal"
+"Full Font Size" , "12"
+"Text Foreground Color" , "  0,   0,   0"
+"Text Background Color" , "255, 255, 255"
+"Selection Foreground Color" , "255, 255, 255"
+"Selection Background Color" , "  0,   0,   0"
+"Cursor Foreground Color" , "255, 255, 255"
+"Cursor Background Color" , "  0,   0,   0"
+"IM Foreground Color" , "  0,   0,   0"
+"IM Background Color" , "152, 203, 255"
+"IM Selection Color" , "255, 152, 152"
+"Shell" , "/bin/sh --login -i"
+"Histry Size" , "500"
+"Text encoding" , "UTF-8"
+"Select Region Buttion" , "Button 1"
+"Paste Mouse Button" , "Button 2"
+"Submenu Mouse Button" , "Button 3"
+"Cursor Image" , "Hand cursor"
+"Drag'n Copy" , "0"
+"Language" , "English"
+"Input Method Aware" , "0"
diff -Nur MuTerm/src/AboutDlg.cpp MuTerm_working/src/AboutDlg.cpp
--- MuTerm/src/AboutDlg.cpp	Sun Jul  1 12:28:10 2001
+++ MuTerm_working/src/AboutDlg.cpp	Sat May 12 02:40:16 2007
@@ -16,6 +16,10 @@
  AboutDlg.cpp,v Implementation for MuTerminal About Dialog.
 
 ***************************************************************************/
+
+#include <stdio.h>
+
+#ifndef USE_ETKXX
 #include <Rect.h>
 #include <View.h>
 #include <TextView.h>
@@ -24,9 +28,11 @@
 #include <Bitmap.h>
 #include <Message.h>
 #include <Screen.h>
-#include <stdio.h>
 #include <File.h>
 #include <String.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "AboutDlg.h"
 #include "TermApp.h"
@@ -40,6 +46,54 @@
 extern char *last_update;
 extern char *machine_type;
 
+static void
+get_about_msg(BString &aboutMsg)
+{
+  aboutMsg
+    << "\n"
+    << "\"MuTerminal\" version "
+    << muterm_ver << " " << machine_type <<"\n"
+    << "(Revision:" << rcs_rev
+    << " LastUpdate:" << last_update  <<")\n"
+    << "Copyright " B_UTF8_COPYRIGHT "2001 Chen Yi-feng.\n"
+    << "Copyright " B_UTF8_COPYRIGHT "1999, 2000 Kazuho Okui and Takashi Murai.\n"
+    "ALL RIGHT RESERVED.\n"
+    "\n"
+#ifdef USE_ETKXX
+    "Ported to Windows/Linux by Anthony Lee\n"
+    "\n"
+#endif
+    "You may redistribute copies of MuTerminal\n"
+    "under the terms of the GNU General Public License.\n"
+    "For more information about Help menu.\n\n\n\n\n"
+    "Staff of MuTerimnal development\n\n\n"
+    "Directing and coding:\n"
+    "\tKazuho Okui\n\n"
+    "Coding:\n"
+    "\tTakashi Murai\n\n"
+    "Examination and documentation\n"
+    "for multilingualization:\n"
+    "\tSatoshi Otsuka\n\n"
+    "Documentation:\n"
+    "\tKenichi Nagaoka\n\n"
+    "Beta tester:\n"
+    "\tGoro Kiyono\n"
+    "\tHideki Naito\n"
+    "\tHirotaka Ichikawa\n"
+    "\tJun Okada\n"
+    "\tMasaaki Hirai\n"
+    "\tMasashi Sawada\n"
+    "\tMasayuki Ookubo\n"
+    "\tMasayuki Yashiro\n"
+    "\tShigeru Kobayashi\n"
+    "\tTakayuki Ito\n"
+    "\tRyo Taya\n"
+    "\tShuichi Nakamura\n\n"
+    "Special Thanks:\n"
+    "\tToshihiro Kisaka\n\n"
+    "\tAnd all MuTerm users!";
+}
+
 //////////////////////////////////////////////////////////////////////////////
 // AboutDlg
 // 	Constructer
@@ -50,17 +104,29 @@
 	    B_NOT_RESIZABLE|B_NOT_ZOOMABLE)
 {
   fApp = app;
+
+#ifndef USE_ETKXX
   AboutView *view = new AboutView (Bounds ());
   AddChild (view);
   SetPulseRate (100 * 1000);
+#else
+  SetBackgroundColor(255, 255, 255);
+  EStringView *strView = new EStringView(ERect(0, 0, 1, 1), NULL, NULL);
+  EString aboutMsg;
+  get_about_msg(aboutMsg);
+  strView->SetText(aboutMsg.String());
+  strView->SetAlignment(E_ALIGN_LEFT);
+  strView->SetVerticalAlignment(E_ALIGN_TOP);
+  strView->ResizeToPreferred();
+  strView->ResizeBy(10, 10);
+  ResizeTo(strView->Frame().Width() + E_V_SCROLL_BAR_WIDTH + 1, Frame().Height() + 50);
+  AddChild(new EScrollView(Frame().OffsetToCopy(E_ORIGIN).InsetBySelf(5, 5), NULL, strView, E_FOLLOW_ALL));
+#endif
 
   PrefHandler text;
   LoadLocaleFile (&text);
 
   this->SetTitle (text.getString ("About MuTerminal"));
-  
-  this->Show();
-
 }
 
 AboutDlg::~AboutDlg (void)
@@ -75,6 +141,7 @@
   BWindow::Quit ();
 }
 
+#ifndef USE_ETKXX
 /*
  * About panel view object
  */
@@ -83,6 +150,7 @@
 {
   staffroll = false;
   count = 10;
+  background = NULL;
   offscreen = NULL;
   textbitmap = NULL;
   
@@ -116,7 +184,6 @@
   else {
     background = new BBitmap (Bounds (), B_COLOR_8_BIT, false);
   }
-  
 
   BRect rect(0, 0, 350, 1000);
 
@@ -145,45 +212,7 @@
   offview->SetHighColor (255,255,255,255);
 
   BString aboutMsg;
-  aboutMsg
-    << "\n"
-    << "\"MuTerminal\" version "
-    << muterm_ver << " " << machine_type <<"\n"
-    << "(Revision:" << rcs_rev
-    << " LastUpdate:" << last_update  <<")\n"
-    << "Copyright " B_UTF8_COPYRIGHT "2001 Chen Yi-feng.\n"
-    << "Copyright " B_UTF8_COPYRIGHT "1999, 2000 Kazuho Okui and Takashi Murai.\n"
-    "ALL RIGHT RESERVED.\n"
-    "\n"
-    "You may redistribute copies of MuTerminal\n"
-    "under the terms of the GNU General Public License.\n"
-    "For more information about Help menu.\n\n\n\n\n"
-    "Staff of MuTerimnal development\n\n\n"
-    "Directing and coding:\n"
-    "\tKazuho Okui\n\n"
-    "Coding:\n"
-    "\tTakashi Murai\n\n"
-    "Examination and documentation\n"
-    "for multilingualization:\n"
-    "\tSatoshi Otsuka\n\n"
-    "Documentation:\n"
-    "\tKenichi Nagaoka\n\n"
-    "Beta tester:\n"
-    "\tGoro Kiyono\n"
-    "\tHideki Naito\n"
-    "\tHirotaka Ichikawa\n"
-    "\tJun Okada\n"
-    "\tMasaaki Hirai\n"
-    "\tMasashi Sawada\n"
-    "\tMasayuki Ookubo\n"
-    "\tMasayuki Yashiro\n"
-    "\tShigeru Kobayashi\n"
-    "\tTakayuki Ito\n"
-    "\tRyo Taya\n"
-    "\tShuichi Nakamura\n\n"
-    "Special Thanks:\n"
-    "\tToshihiro Kisaka\n\n"
-    "\tAnd all MuTerm users!";
+  get_about_msg(aboutMsg);
 
   offview->SetText (aboutMsg.String());
   BPoint logo_p = offview->PointAt (offview->OffsetAt (offview->CountLines ()));
@@ -216,7 +245,6 @@
   }
   
   textbitmap->Unlock();
-  
 }
 
 void
@@ -269,3 +297,5 @@
   offscreen->Unlock ();
   DrawBitmap (offscreen, updateRect, updateRect);
 }
+#endif // !USE_ETKXX
+
diff -Nur MuTerm/src/AboutDlg.h MuTerm_working/src/AboutDlg.h
--- MuTerm/src/AboutDlg.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/AboutDlg.h	Sat May 12 00:42:58 2007
@@ -18,8 +18,12 @@
 #ifndef ABOUTDLG_H_INCLUDED
 #define ABOUTDLG_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <Window.h>
 #include <TextView.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 const ulong MSG_ABOUT_CLOSED = 'msac';
 
@@ -42,6 +46,7 @@
 
 };
 
+#ifndef USE_ETKXX
 class AboutView : public BView
 {
  public:
@@ -63,5 +68,6 @@
   int32		last_point;
 
 };
+#endif
 
 #endif /* ABOUTDLG_H_INCLUDED */
diff -Nur MuTerm/src/AppearPrefView.cpp MuTerm_working/src/AppearPrefView.cpp
--- MuTerm/src/AppearPrefView.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/AppearPrefView.cpp	Fri May 11 12:29:45 2007
@@ -16,6 +16,7 @@
 
 ***************************************************************************/
 
+#ifndef USE_ETKXX
 #include <View.h>
 #include <Button.h>
 #include <MenuField.h>
@@ -24,6 +25,9 @@
 #include <PopUpMenu.h>
 #include <TextControl.h>
 #include <Beep.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include <stdlib.h>
 
diff -Nur MuTerm/src/CodeConv.cpp MuTerm_working/src/CodeConv.cpp
--- MuTerm/src/CodeConv.cpp	Fri Jun  8 21:22:49 2001
+++ MuTerm_working/src/CodeConv.cpp	Sat May 12 03:52:23 2007
@@ -32,16 +32,22 @@
 ************************************************************************/
 
 //#define cyf_DEBUG
-#include <support/UTF8.h>
+//#include <support/UTF8.h>
 #include <string.h>
 #include <stdio.h>
+#include <errno.h>
 
 #include "CodeConv.h"
 #include "TermConst.h"
 #include "Coding.h"
+
+#ifndef USE_ETKXX
 #include "libiconv/include/iconv.h"
+#else
+#include <iconv.h>
+#endif
 
-extern char utf8_width_table[]; // define UTF8WidthTbl.c
+extern "C" char utf8_width_table[]; // define UTF8WidthTbl.c
 extern int gNowCoding;	        // defined TermParse.cpp
 
 //////////////////////////////////////////////////////////////////////
@@ -119,7 +125,11 @@
 
   for(;;)
   {
+#ifndef ETK_OS_LINUX
 	  res=iconv(cdfromutf8,(const char**)&inptr,&inleftsize,&outptr,&outleftsize);
+#else
+	  res=iconv(cdfromutf8,(char**)&inptr,&inleftsize,&outptr,&outleftsize);
+#endif
 	  if( res == (size_t)(-1) )
 	  {
 	     if (errno == EILSEQ)  //char not defined in code table, or wrong table
diff -Nur MuTerm/src/CodeConv.h MuTerm_working/src/CodeConv.h
--- MuTerm/src/CodeConv.h	Fri Jun  8 21:18:47 2001
+++ MuTerm_working/src/CodeConv.h	Fri May 11 12:29:45 2007
@@ -19,9 +19,19 @@
 #ifndef CODECONV_H
 #define CODECONV_H
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "Coding.h"
+
+#ifndef USE_ETKXX
 #include "libiconv/include/iconv.h"
+#else
+#include <iconv.h>
+#endif
 
 #define BEGINS_CHAR(byte) ((byte & 0xc0) >= 0x80)
 
diff -Nur MuTerm/src/CurPos.h MuTerm_working/src/CurPos.h
--- MuTerm/src/CurPos.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/CurPos.h	Fri May 11 12:29:45 2007
@@ -19,7 +19,11 @@
 #ifndef	CURPOS_H_INCLUDED
 #define	CURPOS_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 class CurPos
 {
diff -Nur MuTerm/src/LangPrefView.cpp MuTerm_working/src/LangPrefView.cpp
--- MuTerm/src/LangPrefView.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/LangPrefView.cpp	Sat May 12 02:27:51 2007
@@ -16,6 +16,9 @@
 
 ***************************************************************************/
 
+#include <string.h>
+
+#ifndef USE_ETKXX
 #include <View.h>
 #include <Button.h>
 #include <MenuField.h>
@@ -26,8 +29,9 @@
 #include <CheckBox.h>
 #include <Directory.h>
 #include <Entry.h>
-
-#include <string.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "LangPrefView.h"
 #include "PrefHandler.h"
@@ -35,6 +39,11 @@
 #include "TermWindow.h"
 #include "MenuUtil.h"
 
+#ifdef _WIN32
+// defined in "spawn.cpp"
+extern void win32_find_root_directory(EPath &path, bool no_msys = true);
+#endif
+
 ////////////////////////////////////////////////////////////////////////////
 // LangPrefView ()
 //	Constructor.
@@ -59,7 +68,18 @@
   //
   BPopUpMenu *menu = new BPopUpMenu("");
   char buf[256];
+#ifndef USE_ETKXX
   BDirectory dir("/boot/home/config/settings/MuTerminal/menu/"); 
+#else
+#ifndef _WIN32
+  EDirectory dir(PREF_FOLDER "menu/");
+#else
+  EPath dirPath;
+  win32_find_root_directory(dirPath);
+  dirPath.Append("etc/MuTerminal/menu");
+  EDirectory dir(dirPath.Path());
+#endif
+#endif
   BEntry ent; 
   BDirectory isDir;
   
@@ -67,14 +87,20 @@
 
   while (dir.GetNextEntry(&ent) == B_OK){
     // is this directory ?
-    if(isDir.SetTo(&ent) == B_OK) continue;
+    BPath aPath;
+    ent.GetPath(&aPath);
+    if(isDir.SetTo(aPath.Path()) == B_OK) continue;
     // not directory, let's add it to menu.
+#ifndef USE_ETKXX
     ent.GetName(buf);
+#else
+    strcpy(buf, aPath.Leaf());
+#endif
     BMenuItem *item = new BMenuItem(buf, new BMessage(MSG_LANG_CHANGED));
+    menu->AddItem(item);
     if(!strcmp(buf, gTermPref->getString(PREF_GUI_LANGUAGE))){
       item->SetMarked(true);
     }
-    menu->AddItem(item);
   }
 
   mCharCode->SetDivider (160);
@@ -86,9 +112,10 @@
   // Input Method Aware.
   //
   mInputMethod = SetupCheckBox(IERECT(0, 60, 200, 20), "", MSG_INPUT_METHOD_CHANGED);
-
+#ifdef USE_ETKXX
+  mInputMethod->SetEnabled(false);
+#endif
   mInputMethod->SetValue (gTermPref->getInt32 (PREF_IM_AWARE));
-
 }
 ////////////////////////////////////////////////////////////////////////////
 //
diff -Nur MuTerm/src/Makefile_with_etkxx MuTerm_working/src/Makefile_with_etkxx
--- MuTerm/src/Makefile_with_etkxx	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/Makefile_with_etkxx	Wed May 16 16:20:44 2007
@@ -0,0 +1,123 @@
+DEBUG_OPTIONS = -g -Wall
+OPTIMIZE = -O3
+
+MIN_ETKXX_VER = 0.3.2
+
+ifeq ($(OSTYPE),msys)
+PREFIX =
+else
+PREFIX = /usr/local
+endif
+
+DESTDIR = $(PREFIX)
+EXEC_SUFFIX =
+
+EXTRA_CFLAGS = -DUSE_ETKXX -DPREF_FOLDER=\"$(PREFIX)/etc/MuTerminal/\"
+EXTRA_LDFLAGS =
+
+ifeq ($(OSTYPE),msys)
+LIBICONV_CFLAGS = -I /MinGW/include
+LIBICONV_LIBS = -L /MinGW/lib -liconv
+EXEC_SUFFIX = .exe
+SETTINGS_SAMPLE = ../etc/sample.mp.msys
+else
+
+ifeq ($(findstring Linux,$(shell uname -a)),Linux)
+LIBICONV_CFLAGS =
+LIBICONV_LIBS =
+SETTINGS_SAMPLE = ../etc/sample.mp.linux
+else
+LIBICONV_CFLAGS =
+LIBICONV_LIBS = -liconv
+SETTINGS_SAMPLE = ../etc/sample.mp
+endif
+
+endif
+
+TARGET = MuTerminal
+
+OBJECTS = \
+	TermApp.o \
+	spawn.o \
+	MuTerminal.o \
+	TermWindow.o \
+	TermView.o \
+	TermBaseView.o \
+	TermIM.o \
+	CurPos.o \
+	VTPrsTbl.o \
+	VTKeyTbl.o \
+	TermBuffer.o \
+	PrefDlg.o \
+	AboutDlg.o \
+	PrefView.o \
+	TTextControl.o \
+	AppearPrefView.o \
+	MousePrefView.o \
+	ShellPrefView.o \
+	LangPrefView.o \
+	PrefHandler.o \
+	CodeConv.o \
+	MenuUtil.o \
+	UTF8WidthTbl.o \
+	TermParse.o
+
+ifeq ($(OSTYPE),msys)
+OBJECTS += MuTerminal.rc.o
+endif
+
+CFLAGS = $(DEBUG_OPTIONS) $(OPTIMIZE) $(EXTRA_CFLAGS)
+CFLAGS += $(shell etkxx-config --cflags) $(LIBICONV_CFLAGS)
+CXXFLAGS = $(CFLAGS)
+LDFLAGS = $(shell etkxx-config --libs) $(LIBICONV_LIBS)
+
+all:
+ifneq ($(OSTYPE),beos)
+	@if ! ( etkxx-config --atleast-version $(MIN_ETKXX_VER) ) ; then \
+		echo "*** ERROR: ETK++ >= $(MIN_ETKXX_VER) !!!"; \
+	else \
+		$(MAKE) -f Makefile_with_etkxx $(TARGET); \
+	fi
+else
+	@echo "*** ERROR: IT'S NOT FOR BeOS !!!"
+endif
+
+ifneq ($(OSTYPE),beos)
+$(TARGET): $(OBJECTS)
+	$(CXX) $(EXTRA_LDFLAGS) $(DEBUG_OPTIONS) $(OPTIMIZE) $^ -o $@ $(LDFLAGS)
+
+install:
+	$(MAKE) -f Makefile_with_etkxx $(TARGET)
+	strip -s $(TARGET)$(EXEC_SUFFIX)
+	-mkdir -p $(DESTDIR)/bin
+	cp $(TARGET)$(EXEC_SUFFIX) $(DESTDIR)/bin/$(TARGET)$(EXEC_SUFFIX)
+	mkdir -p $(DESTDIR)/etc/MuTerminal/menu
+	cp -af menu $(DESTDIR)/etc/MuTerminal/
+	cp $(SETTINGS_SAMPLE) $(DESTDIR)/etc/MuTerminal/setting.mp
+
+uninstall:
+	rm -f $(DESTDIR)/bin/$(TARGET)$(EXEC_SUFFIX)
+	rm -rf $(DESTDIR)/etc/MuTerminal
+
+clean:
+	rm -f *.o $(TARGET)$(EXEC_SUFFIX)
+endif
+
+ifeq ($(OSTYPE),msys)
+MuTerminal.rc.o: win32/MuTerminal.rc win32/MuTerminal.ico
+	windres -I ./win32 -o $@ $<
+endif
+
+.SUFFIXES: .c .cpp .cxx .cc .o
+.c.o:
+	$(CC) $(CFLAGS) -c $< -o $@
+
+.cpp.o:
+	$(CXX) $(CXXFLAGS) -c $< -o $@
+
+.cxx.o:
+	$(CXX) $(CXXFLAGS) -c $< -o $@
+
+.cc.o:
+	$(CXX) $(CXXFLAGS) -c $< -o $@
+
diff -Nur MuTerm/src/MenuUtil.cpp MuTerm_working/src/MenuUtil.cpp
--- MuTerm/src/MenuUtil.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/MenuUtil.cpp	Sat May 12 02:28:54 2007
@@ -16,12 +16,17 @@
 
 ***************************************************************************/
 
-#include <Menu.h>
+#include <stdio.h>
 #include <string.h>
+
+#ifndef USE_ETKXX
+#include <Menu.h>
 #include <MenuItem.h>
 #include <PopUpMenu.h>
 #include <Font.h>
-#include <stdio.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "MenuUtil.h"
 #include "TermConst.h"
@@ -32,6 +37,11 @@
 
 #define LOCALE_FILE_DIR PREF_FOLDER"menu/"
 
+#ifdef _WIN32
+// defined in "spawn.cpp"
+extern void win32_find_root_directory(EPath &path, bool no_msys = true);
+#endif
+
 //////////////////////////////////////////////////////////////////////////////
 //
 //
@@ -43,10 +53,18 @@
   int32 numFamilies = count_font_families(); 
   
   for ( int32 i = 0; i < numFamilies; i++ ) { 
-    font_family family; 
     uint32 flags; 
 
+#ifndef USE_ETKXX
+    font_family family; 
     if ( get_font_family(i, &family, &flags) == B_OK ) { 
+#else
+    const char *family;
+    if ( etk_get_font_family(i, &family) == E_OK ) { 
+      EFont font;
+      font.SetFamilyAndStyle((euint32)(i << 16));
+      if(font.HasFixedSize() == false) continue;
+#endif
       menu->AddItem(new BMenuItem(family, new BMessage(msg)));
       if(!strcmp(defaultFontName, family)){
         (menu->ItemAt(i))->SetMarked(true);
@@ -151,12 +169,41 @@
    * Open menu localize file.
    */
   locale = gTermPref->getString (PREF_GUI_LANGUAGE);
+#ifndef USE_ETKXX
   sprintf (buf, "%s%s", LOCALE_FILE_DIR, locale);
+#else
+  EPath aPath;
+#ifdef _WIN32
+  win32_find_root_directory(aPath);
+  aPath.Append("etc/MuTerminal/menu");
+#else
+  aPath.SetTo(LOCALE_FILE_DIR);
+#endif
+  aPath.Append(locale);
+
+  EEntry aEntry(aPath.Path());
+  if(!aEntry.Exists())
+  {
+    ETK_WARNING("[MUTERM]: Failed to find \"%s\"", aPath.Path());
+    aPath.GetParent(&aPath);
+    aPath.Append("English");
+    aEntry.SetTo(aPath.Path());
+    if(!aEntry.Exists())
+    {
+      ETK_WARNING("[MUTERM]: Failed to find \"%s\"", aPath.Path());
+      return;
+    }
+  }
+
+  strcpy(buf, aPath.Path());
+#endif
 
   sts = pref->OpenText (buf);
 
+#ifndef USE_ETKXX
   if (sts == B_ERROR)
     pref->OpenText (LOCALE_FILE_DEFAULT);
+#endif
 
   return;
   
diff -Nur MuTerm/src/MenuUtil.h MuTerm_working/src/MenuUtil.h
--- MuTerm/src/MenuUtil.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/MenuUtil.h	Fri May 11 12:29:45 2007
@@ -19,7 +19,11 @@
 #ifndef MENUUTIL_H_INCLUDED
 #define MENUUTIL_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #ifdef __cplusplus
 extern "C" {
diff -Nur MuTerm/src/MousePrefView.cpp MuTerm_working/src/MousePrefView.cpp
--- MuTerm/src/MousePrefView.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/MousePrefView.cpp	Sat May 12 00:28:59 2007
@@ -16,6 +16,10 @@
 
 ***************************************************************************/
 
+#include <string.h>
+#include <stdio.h>
+
+#ifndef USE_ETKXX
 #include <View.h>
 #include <Button.h>
 #include <MenuField.h>
@@ -25,8 +29,9 @@
 #include <TextControl.h>
 #include <CheckBox.h>
 #include <Directory.h>
-#include <string.h>
-#include <stdio.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "MousePrefView.h"
 #include "PrefHandler.h"
@@ -107,7 +112,9 @@
   mDragnCopy = SetupCheckBox(IERECT(0, 120, 200, 20),
 			       "",
 			       MSG_DRAGN_COPY_CHANGED);
-
+#ifdef USE_ETKXX
+  mDragnCopy->SetEnabled(false);
+#endif
   mDragnCopy->SetValue (gTermPref->getInt32 (PREF_DRAGN_COPY));
 }
 ////////////////////////////////////////////////////////////////////////////
diff -Nur MuTerm/src/MuTerminal.cpp MuTerm_working/src/MuTerminal.cpp
--- MuTerm/src/MuTerminal.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/MuTerminal.cpp	Wed May 16 16:15:53 2007
@@ -32,6 +32,8 @@
 // main (int argc, char **argv)
 //	main routine of MuTerminal.
 ////////////////////////////////////////////////////////////////////////////
+#ifndef _WIN32
+
 int
 main ()
 {
@@ -40,3 +42,63 @@
 
   return 0;
 }
+
+#else /* _WIN32 */
+
+#include <windows.h>
+
+static void run_app()
+{
+  TermApp app;
+  app.Run ();
+}
+
+int main(int argc, char **argv)
+{
+	void *port;
+	if((port = etk_open_port("MuTerminal Port")) != NULL)
+	{
+		etk_delete_port(port);
+		run_app();
+		return 0;
+	}
+
+	HANDLE mutex = OpenMutex(MUTEX_ALL_ACCESS, FALSE, "MuTerminal Mutex");
+	if(mutex == NULL)
+	{
+		if((mutex = CreateMutex(NULL, FALSE, "MuTerminal Mutex")) == NULL)
+			ETK_ERROR("[MUTERM]: CreateMutex() failed !!!");
+		WaitForSingleObject(mutex, 0L);
+
+		STARTUPINFO sh_startup_info;
+		PROCESS_INFORMATION sh_process_info;
+
+		bzero(&sh_process_info, sizeof(sh_process_info));
+		bzero(&sh_startup_info, sizeof(sh_startup_info));
+		sh_startup_info.cb = sizeof(sh_startup_info);
+
+		if(CreateProcess(NULL, argv[0], NULL, NULL, FALSE, CREATE_NEW_CONSOLE,
+				 NULL, NULL, &sh_startup_info, &sh_process_info) == 0)
+			ETK_ERROR("[MUTERM]: CreateProcess() failed !!!");
+
+		do
+		{
+			ReleaseMutex(mutex);
+			Sleep(100);
+		} while(WaitForSingleObject(mutex, 0L) == WAIT_OBJECT_0);
+
+		CloseHandle(mutex);
+		CloseHandle(sh_process_info.hProcess);
+		CloseHandle(sh_process_info.hThread);
+	}
+	else
+	{
+		while(WaitForSingleObject(mutex, 100L) != WAIT_OBJECT_0) { /* nothing */ }
+		CloseHandle(mutex);
+		run_app();
+	}
+
+	return 0;
+}
+#endif // _WIN32
+
diff -Nur MuTerm/src/PrefDlg.cpp MuTerm_working/src/PrefDlg.cpp
--- MuTerm/src/PrefDlg.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefDlg.cpp	Fri May 11 12:29:45 2007
@@ -15,6 +15,8 @@
  PrefDlg.cpp,v: Implementation for MuTerminal Preference Dialog.
 
 ***************************************************************************/
+
+#ifndef USE_ETKXX
 #include <Box.h>
 #include <Button.h>
 #include <TabView.h>
@@ -22,6 +24,10 @@
 #include <Screen.h>
 #include <Alert.h>
 #include <Path.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include <stdio.h>
 
 #include "PrefHandler.h"
@@ -58,11 +64,20 @@
   fDirty = false;
   fSavePanel = NULL;
   
+  Lock();
+
   SetupContent();
+#ifdef USE_ETKXX
+  MoveToCenter();
+#endif
   Show();
 
+#ifndef USE_ETKXX
   AddShortcut ((ulong)'Q', (ulong)B_COMMAND_KEY, new BMessage(B_QUIT_REQUESTED));
   AddShortcut ((ulong)'W', (ulong)B_COMMAND_KEY, new BMessage(B_QUIT_REQUESTED));
+#endif
+
+  Unlock();
 }
 
 //////////////////////////////////////////////////////////////////////////////
@@ -140,7 +155,8 @@
 PrefDlg::QuitRequested ()
 {
   if(!fDirty) return true;
-  
+
+#ifndef USE_ETKXX  
   BAlert *alert = new BAlert("",
 			     "Save changes to this preference panel?",
 			     "Cancel", "Don't save",
@@ -149,6 +165,14 @@
 			     B_OFFSET_SPACING,
 			     B_WARNING_ALERT); 
   alert->SetShortcut(0, B_ESCAPE); 
+#else
+  EAlert *alert = new EAlert("",
+			     "Save changes to this preference panel?",
+			     "Cancel", "Don't save",
+			     "Save",
+			     E_WIDTH_AS_USUAL,
+			     E_WARNING_ALERT); 
+#endif
   int32 button_index = alert->Go();
 
   switch (button_index) {
@@ -193,6 +217,7 @@
 void
 PrefDlg::SaveRequested(BMessage *msg)
 {
+#ifndef USE_ETKXX
   entry_ref dirref;
   const char      *filename;
 
@@ -202,6 +227,16 @@
   BPath path(&dir, filename);
     
   gTermPref->SaveAsText (path.Path(), PREFFILE_MIMETYPE, MUTERM_SIGNATURE);
+#else
+  const char *dir;
+  const char *filename;
+
+  msg->FindString("directory", &dir);
+  msg->FindString("name", &filename);
+  BPath path(dir, filename);
+    
+  gTermPref->SaveAsText (path.Path(), PREFFILE_MIMETYPE, MUTERM_SIGNATURE);
+#endif
 }
 //////////////////////////////////////////////////////////////////////////////
 // if OK button pressed
@@ -217,8 +252,15 @@
 
   delete fPrefTemp;
   fPrefTemp = new PrefHandler (gTermPref);
-  
+
+#ifndef USE_ETKXX
   gTermPref->SaveAsText (TERM_PREF, PREFFILE_MIMETYPE);
+#else
+  EPath aPath;
+  e_find_directory(E_USER_DIRECTORY, &aPath);
+  aPath.Append(".MuTerm");
+  gTermPref->SaveAsText (aPath.Path(), PREFFILE_MIMETYPE);
+#endif
   
   fDirty = false;
 }
@@ -269,7 +311,8 @@
   // Set window Title
   sprintf (titlestr, "%s MuTerm (%s)",
 	   LabelText.getString ("PrefWindow"),
-	   &tty_name[8]);
+	   &tty_name[8]
+	  );
   this->SetTitle(titlestr);
   // Set Tab Lables and Control labels
   for (int32 i = 0; i < fTabView->CountTabs(); i++) {
@@ -296,7 +339,7 @@
   switch (msg->what) {  
   case MSG_SAVE_PRESSED:
     doSave();
-    Quit();
+    PostMessage(B_QUIT_REQUESTED);
     break;
 
   case MSG_SAVEAS_PRESSED:
@@ -349,9 +392,11 @@
 
   b = new BButton(r, "", label, new BMessage(msg));
   parent->AddChild(b);
-  
+
+#ifndef USE_ETKXX
   if (defaultButton)
     (parent->Window())->SetDefaultButton(b);
+#endif
 
   return b;
 }
@@ -362,6 +407,7 @@
 BRect
 PrefDlg::CenteredRect(BRect r)
 {
+#ifndef USE_ETKXX
   BRect screenRect = BScreen().Frame();
 
   screenRect.InsetBy(10,10);
@@ -372,4 +418,7 @@
   r.OffsetTo(x, y);
   
   return r;
+#else
+  return r;
+#endif
 }
diff -Nur MuTerm/src/PrefDlg.h MuTerm_working/src/PrefDlg.h
--- MuTerm/src/PrefDlg.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefDlg.h	Fri May 11 12:29:45 2007
@@ -18,7 +18,12 @@
 #ifndef PREFDLG_H_INCLUDED
 #define PREFDLG_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <Window.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "PrefHandler.h"
 
 // local message, so these are in .cpp files....
diff -Nur MuTerm/src/PrefHandler.cpp MuTerm_working/src/PrefHandler.cpp
--- MuTerm/src/PrefHandler.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefHandler.cpp	Sat May 12 04:08:52 2007
@@ -16,15 +16,22 @@
 
 ***************************************************************************/
 #include <stdio.h>
-#include <unistd.h>
 #include <stdlib.h>
 #include <string.h>
 
+#ifndef _WIN32
+#include <unistd.h>
+#endif
+
+#ifndef USE_ETKXX
 #include <GraphicsDefs.h>
 #include <Message.h>
 #include <File.h>
 #include <Entry.h>
 #include <NodeInfo.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "PrefHandler.h"
 
@@ -86,10 +93,15 @@
 status_t
 PrefHandler::Save(const char *path)
 {
+#ifndef USE_ETKXX
   status_t sts;
   BFile file(path, B_WRITE_ONLY | B_CREATE_FILE | B_ERASE_FILE);
   sts = mPrefContainer.Flatten(&file);
   return sts;
+#else
+  SaveAsText(path, NULL, NULL);
+  return B_OK;
+#endif
 }
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -103,18 +115,20 @@
   type_code type;
   char *key;
   char buf[256];
-  
+
   for (int32 i = 0; mPrefContainer.GetInfo(B_STRING_TYPE, i, &key, &type) == B_OK; i++){  
-    int len = sprintf(buf, "\"%s\" , \"%s\"\n", key, this->getString(key));
-    file.Write(buf, len);
+    bzero(buf, sizeof(buf));
+    sprintf(buf, "\"%s\" , \"%s\"\n", key, this->getString(key));
+    file.Write(buf, strlen(buf));
   }
-  
+
+#ifndef USE_ETKXX
   if(mimetype != NULL){
     BNodeInfo info(&file);
     info.SetType(mimetype);
     info.SetPreferredApp (signature);
   }  
-  
+#endif  
 }
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -123,7 +137,13 @@
 int32 
 PrefHandler::getInt32(const char *key)
 {
+#ifndef USE_ETKXX
   return atoi(mPrefContainer.FindString(key));
+#else
+  const char *str;
+  mPrefContainer.FindString(key, &str);
+  return atoi(str);
+#endif
 }
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -132,7 +152,13 @@
 float 
 PrefHandler::getFloat(const char *key)
 {
+#ifndef USE_ETKXX
   return atof(mPrefContainer.FindString(key));
+#else
+  const char *str;
+  mPrefContainer.FindString(key, &str);
+  return atof(str);
+#endif
 }
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -143,7 +169,12 @@
 {
   const char *buf;
 
+#ifndef USE_ETKXX
   buf = mPrefContainer.FindString(key);
+#else
+  buf = NULL;
+  mPrefContainer.FindString(key, &buf);
+#endif
   if (buf == NULL)
     buf = "Error!";
 
@@ -157,7 +188,12 @@
 bool
 PrefHandler::getBool(const char *key)
 {
-  const char *s = mPrefContainer.FindString(key);
+  const char *s;
+#ifndef USE_ETKXX
+  s = mPrefContainer.FindString(key);
+#else
+  mPrefContainer.FindString(key, &s);
+#endif
   if (!strcmp(s, PREF_TRUE)) return true;
   return false;
 }
@@ -170,7 +206,12 @@
 {
   int r, g, b;
   rgb_color col;
-  const char *s = mPrefContainer.FindString(key);
+  const char *s;
+#ifndef USE_ETKXX
+  s = mPrefContainer.FindString(key);
+#else
+  mPrefContainer.FindString(key, &s);
+#endif
   sscanf(s, "%d, %d, %d", &r, &g, &b);
   col.red = r;
   col.green = g;
@@ -220,8 +261,13 @@
 void
 PrefHandler::setString(const char *key, const char *data)
 {
+#ifndef USE_ETKXX
   mPrefContainer.RemoveName(key);
   mPrefContainer.AddString(key, data);
+#else
+  if(mPrefContainer.HasString(key)) mPrefContainer.ReplaceString(key, data);
+  else mPrefContainer.AddString(key, data);
+#endif
 }
 /////////////////////////////////////////////////////////////////////////////
 // setRGB
@@ -251,9 +297,15 @@
 status_t
 PrefHandler::loadFromFile(BEntry *ent)
 {
+#ifndef USE_ETKXX
   BFile file (ent, B_READ_ONLY);
   mPrefContainer.MakeEmpty();
   return mPrefContainer.Unflatten(&file);
+#else
+  BPath aPath;
+  ent->GetPath(&aPath);
+  return loadFromTextFile(aPath.Path());
+#endif
 }
 /////////////////////////////////////////////////////////////////////////////
 //
diff -Nur MuTerm/src/PrefHandler.h MuTerm_working/src/PrefHandler.h
--- MuTerm/src/PrefHandler.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefHandler.h	Fri May 11 12:29:45 2007
@@ -18,10 +18,14 @@
 #ifndef PREFHANDLER_H_INCLUDED
 #define PREFHANDLER_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
 #include <Errors.h>
 #include <GraphicsDefs.h>
 #include <Message.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 struct prefDefaults
 {
diff -Nur MuTerm/src/PrefView.cpp MuTerm_working/src/PrefView.cpp
--- MuTerm/src/PrefView.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefView.cpp	Fri May 11 12:29:45 2007
@@ -16,6 +16,7 @@
 
 ***************************************************************************/
 
+#ifndef USE_ETKXX
 #include <Box.h>
 #include <Button.h>
 #include <RadioButton.h>
@@ -27,6 +28,9 @@
 #include <Message.h>
 #include <String.h>
 #include <Window.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "PrefHandler.h"
 #include "TermConst.h"
@@ -148,9 +152,11 @@
 
   b = new BButton(r, "", label, new BMessage(msg));
   AddChild(b);
-  
+
+#ifndef USE_ETKXX  
   if (defaultButton)
     (Window())->SetDefaultButton(b);
+#endif
 
   return b;
 }
@@ -237,8 +243,12 @@
 PrefView::SetupBColorControl(BPoint p, color_control_layout layout, float cell_size, ulong msg)
 {
   BColorControl *col;
-  
+
+#ifndef USE_ETKXX  
   col = new BColorControl( p, layout, cell_size, "", new BMessage(msg));
+#else
+  col = new BColorControl( p, "", new BMessage(msg));
+#endif
   AddChild(col);
   return col;
 }
diff -Nur MuTerm/src/PrefView.h MuTerm_working/src/PrefView.h
--- MuTerm/src/PrefView.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/PrefView.h	Fri May 11 12:29:45 2007
@@ -18,9 +18,14 @@
 
 #ifndef PREFVIEW_H_INCLUDED
 #define PREFVIEW_H_INCLUDED
+
+#ifndef USE_ETKXX
 #include <View.h>
 #include <ColorControl.h>
 #include <String.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 // Interface Element's Coordinate System to BRect.
 #define IERECT(X,Y,W,H)  BRect((X),(Y),(X+W-1),(Y+H-1))
diff -Nur MuTerm/src/ShellPrefView.cpp MuTerm_working/src/ShellPrefView.cpp
--- MuTerm/src/ShellPrefView.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/ShellPrefView.cpp	Fri May 11 12:29:45 2007
@@ -16,6 +16,9 @@
 
 ***************************************************************************/
 
+#include <stdlib.h>
+
+#ifndef USE_ETKXX
 #include <View.h>
 #include <Button.h>
 #include <MenuField.h>
@@ -23,8 +26,10 @@
 #include <MenuItem.h>
 #include <PopUpMenu.h>
 #include <TextControl.h>
-#include <stdlib.h>
 #include <Beep.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "ShellPrefView.h"
 #include "PrefHandler.h"
diff -Nur MuTerm/src/TTextControl.cpp MuTerm_working/src/TTextControl.cpp
--- MuTerm/src/TTextControl.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TTextControl.cpp	Fri May 11 12:29:45 2007
@@ -16,7 +16,6 @@
 
 ***************************************************************************/
 
-#include <TextControl.h>
 #include "TTextControl.h"
 
 /************************************************************************
diff -Nur MuTerm/src/TTextControl.h MuTerm_working/src/TTextControl.h
--- MuTerm/src/TTextControl.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TTextControl.h	Fri May 11 12:29:45 2007
@@ -18,7 +18,12 @@
 
 #ifndef TTEXTCTL_H_INCLUDED
 #define TTEXTCTL_H_INCLUDED
+
+#ifndef USE_ETKXX
 #include <TextControl.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 class TTextControl : public BTextControl
 {
diff -Nur MuTerm/src/TermApp.cpp MuTerm_working/src/TermApp.cpp
--- MuTerm/src/TermApp.cpp	Sun Jul  1 12:27:21 2001
+++ MuTerm_working/src/TermApp.cpp	Tue May 15 23:48:26 2007
@@ -24,6 +24,10 @@
 char *muterm_ver = "2.4";
 char *last_update = "2001/7/1";
 
+#ifdef USE_ETKXX
+#include "etkxx-impl.h"
+#endif
+
 #ifdef __INTEL__
 char *machine_type = "for x86";
 #else
@@ -32,11 +36,25 @@
 
 #include <stdio.h>
 #include <signal.h>
+
+#ifndef _WIN32
 #include <sys/wait.h>
+#else
+#include <windows.h>
+#endif
+
+#if 0
 #include <bsd_mem.h>
+#else
+#include <string.h>
+#define bcopy(src, dst, len)	memcpy(dst, src, len)
+#define index(str, c)		strchr(str, c)
+#endif
+
 #include <stdlib.h>
 #include <malloc.h>
 
+#ifndef USE_ETKXX
 #include <Path.h>
 #include <NodeInfo.h>
 #include <Roster.h>
@@ -44,6 +62,7 @@
 #include <Screen.h>
 #include <be_apps/NetPositive/NetPositive.h>
 #include <String.h>
+#endif
 
 #include "TermApp.h"
 #include "TermWindow.h"
@@ -69,6 +88,10 @@
 const ulong MSG_ACTIVATE_TERM = 'msat';
 const ulong MSG_TERM_IS_MINIMIZE = 'mtim';
 
+#ifdef _WIN32
+// defined in "spawn.cpp"
+extern void win32_find_root_directory(EPath &path, bool no_msys = true);
+#endif
 
 ////////////////////////////////////////////////////////////////////////////
 //
@@ -77,11 +100,14 @@
 TermApp::TermApp (void)
   :BApplication( MUTERM_SIGNATURE )
 {
-
+#ifndef USE_ETKXX
   BList teams; 
 
   be_roster->GetAppList(MUTERM_SIGNATURE, &teams); 
   int window_num = teams.CountItems();
+#else
+  int window_num = 1;
+#endif
 
   int i = window_num / 16;
   int j = window_num % 16;
@@ -94,7 +120,7 @@
   fTermFrame.Set(k, l, k + 50, k + 50);
 
   gTermPref = new PrefHandler ();
-
+  
 }
 ////////////////////////////////////////////////////////////////////////////
 //
@@ -161,7 +187,31 @@
 
   // gTermPref is not empty when App opened by pref file
   if (gTermPref->IsEmpty()){
+#ifndef USE_ETKXX
     gTermPref->OpenText(TERM_PREF, termDefaults);
+#else
+    EPath aPath;
+    EEntry aEntry;
+
+    e_find_directory(E_USER_DIRECTORY, &aPath);
+    aPath.Append(".MuTerm");
+    aEntry.SetTo(aPath.Path());
+    if(!aEntry.Exists())
+    {
+#ifndef _WIN32
+      aPath.SetTo(TERM_PREF);
+#else
+      win32_find_root_directory(aPath);
+      aPath.Append("etc/MuTerminal/setting.mp");
+#endif
+      aEntry.SetTo(aPath.Path());
+    }
+
+    if(!aEntry.Exists())
+      ETK_WARNING("[MUTERM]: Failed to find \"%s\"", aPath.Path());
+    else
+      gTermPref->OpenText(aPath.Path(), termDefaults);
+#endif
   }
   
   encoding = gTermPref->getString (PREF_TEXT_ENCODING);
@@ -194,14 +244,16 @@
   
   /* failed spawn, print stdout and open alert panel. */
   if (pfd == -1 ) {
-    (new BAlert ("alert",
+    (new BAlert ("MuTerminal Alert",
                  "MuTerminal Error!!\nCan't execute shell.",
                  "Abort", NULL, NULL,
-                  B_WIDTH_FROM_LABEL, B_INFO_ALERT))->Go(NULL);
-    this->PostMessage(B_QUIT_REQUESTED);
+                  B_WIDTH_FROM_LABEL, B_INFO_ALERT))->Go();
+    this->Quit();
+  }
+  else
+  {
+    MakeTermWindow (fTermFrame);
   }
-
-  MakeTermWindow (fTermFrame);
 }
 ////////////////////////////////////////////////////////////////////////////
 //
@@ -211,10 +263,20 @@
 TermApp::Quit (void)
 {
   if(!usage_requested){
+#ifndef _WIN32
     int status;
 
     kill (-sh_pid, SIGHUP);
     wait (&status);
+#else
+    if(sh_pid != (DWORD)-1)
+    {
+      HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, sh_pid);
+      GenerateConsoleCtrlEvent(CTRL_BREAK_EVENT, sh_pid);
+      WaitForSingleObject(hProcess, INFINITE);
+      CloseHandle(hProcess);
+    }
+#endif
   }
   
   delete gTermPref;
@@ -244,7 +306,13 @@
   case MSG_ACTIVATE_TERM:
     fTermWindow->TermWinActivate();
     break;
-    
+
+#ifdef USE_ETKXX
+  case B_ABOUT_REQUESTED:
+    AboutRequested();
+    break;
+#endif
+
   case MSG_ABOUT_CLOSED:
     fAboutPanel = NULL;
     break;
@@ -348,14 +416,32 @@
     status_t sts;
     off_t size = 0;
 
+#ifndef USE_ETKXX
     sts = inFile.SetTo("/etc/rgb.txt", B_READ_ONLY);
+#else
+    EPath aPath;
+    if((sts = e_find_directory(E_ETC_DIRECTORY, &aPath)) == E_OK)
+    {
+        aPath.Append("rgb.txt");
+        if((sts = inFile.SetTo(aPath.Path(), E_READ_ONLY)) == E_OK)
+        {
+	    EEntry aEntry(aPath.Path());
+	    eint64 _size;
+	    aEntry.GetSize(&_size);
+	    size = (off_t)_size;
+        }
+    }
+#endif
+
     if (sts != B_OK) {
       fprintf (stderr, "%s: Can't open /etc/rgb.txt file.\n", argv[0]);
       usage_requested = true;
       this->PostMessage (B_QUIT_REQUESTED);
     }
 
+#ifndef USE_ETKXX
     inFile.GetSize (&size);
+#endif
     char *buffer = new char [size];
     inFile.Read (buffer, size);
     
@@ -368,7 +454,31 @@
 
 	if (text_to_rgb (value, &color, buffer)) {
 	  if (gTermPref->IsEmpty()){
+#ifndef USE_ETKXX
 	    gTermPref->OpenText(TERM_PREF, termDefaults);
+#else
+	    EPath aPath;
+	    EEntry aEntry;
+
+	    e_find_directory(E_USER_DIRECTORY, &aPath);
+	    aPath.Append(".MuTerm");
+	    aEntry.SetTo(aPath.Path());
+	    if(!aEntry.Exists())
+	    {
+#ifndef _WIN32
+	      aPath.SetTo(TERM_PREF);
+#else
+	      win32_find_root_directory(aPath);
+	      aPath.Append("etc/MuTerminal/setting.mp");
+#endif
+	      aEntry.SetTo(aPath.Path());
+	    }
+
+	    if(!aEntry.Exists())
+	      ETK_WARNING("[MUTERM]: Failed to find \"%s\"", aPath.Path());
+	    else
+	      gTermPref->OpenText(aPath.Path(), termDefaults);
+#endif
 	  }
 	  gTermPref->setRGB (standard_args[i].prefname, color);
 	}
@@ -408,7 +518,9 @@
 TermApp::AboutRequested (void)
 {
   if (fAboutPanel) {
+    fAboutPanel->Lock();
     fAboutPanel->Activate ();
+    fAboutPanel->Unlock();
   }
   else {
     BRect rect(0, 0, 350 - 1, 170 - 1);
@@ -427,6 +539,7 @@
 void
 TermApp::RefsReceived(BMessage *message) 
 { 
+#ifndef USE_ETKXX
   // Works Only Launced by Double-Click file, or Drags file to App.
   if (!(this->IsLaunching())){
     return;
@@ -457,6 +570,7 @@
     //    beep();
     return;
   }
+#endif
 }  
 ////////////////////////////////////////////////////////////////////////////
 //
@@ -481,7 +595,11 @@
 void
 TermApp::RunNewTerm (void)
 {
+#ifndef USE_ETKXX
   be_roster->Launch (MUTERM_SIGNATURE);
+#else
+  // TODO
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // ActivateTermWindow
@@ -505,6 +623,7 @@
 void
 TermApp::SwitchTerm()
 {
+#ifndef USE_ETKXX
   team_id myId = be_app->Team(); // My id
   BList teams;
   be_roster->GetAppList(MUTERM_SIGNATURE, &teams); 
@@ -524,6 +643,7 @@
 
   // Activare switched terminal.
   ActivateTermWindow(reinterpret_cast<team_id>(teams.ItemAt(i)));
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // IsMinimize
@@ -541,7 +661,8 @@
   BMessage reply;
   bool hidden;
 
-  if (app.SendMessage(MSG_TERM_IS_MINIMIZE, &reply) != B_OK)
+  BMessage msg(MSG_TERM_IS_MINIMIZE);
+  if (app.SendMessage(&msg, &reply) != B_OK)
     return true;
 
   reply.FindBool("result", &hidden);
@@ -560,6 +681,7 @@
 void
 TermApp::ShowHTML(BMessage *msg)
 {
+#ifndef USE_ETKXX
   const char *url;
   msg->FindString("Url", &url);
   BMessage message;
@@ -573,6 +695,7 @@
 
   // Activate net+
   be_roster->ActivateApp(be_roster->TeamFor(B_NETPOSITIVE_APP_SIGNATURE));
+#endif
 }
 
 ////////////////////////////////////////////////////////////////////////////
diff -Nur MuTerm/src/TermApp.h MuTerm_working/src/TermApp.h
--- MuTerm/src/TermApp.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TermApp.h	Fri May 11 12:29:45 2007
@@ -19,8 +19,12 @@
 #ifndef TERMAPP_H
 #define TERMAPP_H
 
+#ifndef USE_ETKXX
 #include <app/Application.h>
 #include <String.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 extern int pfd;
 extern char *ptyname;
diff -Nur MuTerm/src/TermBaseView.h MuTerm_working/src/TermBaseView.h
--- MuTerm/src/TermBaseView.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TermBaseView.h	Fri May 11 12:29:45 2007
@@ -18,7 +18,12 @@
 
 #ifndef TERMBASEVIEW_H_INCLUDED
 #define TERMBASEVIEW_H_INCLUDED
+
+#ifndef USE_ETKXX
 #include <View.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 class TermView;
 
diff -Nur MuTerm/src/TermBuffer.cpp MuTerm_working/src/TermBuffer.cpp
--- MuTerm/src/TermBuffer.cpp	Thu Jun 28 14:50:39 2001
+++ MuTerm_working/src/TermBuffer.cpp	Fri May 11 12:29:45 2007
@@ -81,13 +81,19 @@
 
 ************************************************************************/
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
 #include <String.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include <stdio.h>
 #include <malloc.h>
 #include <string.h>
-#include <bsd_mem.h>
+
+//#include <bsd_mem.h>
+#define index(str,c)	strchr(str,c)
 
 #include "TermBuffer.h"
 #include "TermConst.h"
diff -Nur MuTerm/src/TermBuffer.h MuTerm_working/src/TermBuffer.h
--- MuTerm/src/TermBuffer.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TermBuffer.h	Fri May 11 12:29:45 2007
@@ -18,7 +18,12 @@
 #ifndef TERMBUFFER_H_INCLUDED
 #define TERMBUFFER_H_INCLUDED
 
+#ifndef USE_ETKXX
 #include <SupportDefs.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "TermConst.h"
 #include "CurPos.h"
 
diff -Nur MuTerm/src/TermConst.h MuTerm_working/src/TermConst.h
--- MuTerm/src/TermConst.h	Thu Jun 28 14:43:48 2001
+++ MuTerm_working/src/TermConst.h	Fri May 11 12:29:45 2007
@@ -24,6 +24,10 @@
 #define MALLOC_DEBUG
 #endif
 
+#ifdef USE_ETKXX
+#include "etkxx-impl.h"
+#endif
+
 ////////////////////////////////////////////////////////////////////////////
 // Application signature (Must same in Muterminal.rsrc)//
 ////////////////////////////////////////////////////////////////////////////
@@ -51,6 +55,8 @@
 
 const uint32 M_GET_DEVICE_NUM	= 'Mgdn';
 
+const uint32 MSG_WINDOW_TITLE	= 'Mwtl';
+
 // Message Runner.
 
 const uint32 MSGRUN_CURSOR	= 'Rcur';
@@ -121,7 +127,15 @@
 ////////////////////////////////////////////////////////////////////////////
 // Preference Folder and setting path
 ////////////////////////////////////////////////////////////////////////////
+
+#ifndef USE_ETKXX
 #define PREF_FOLDER  "/boot/home/config/settings/MuTerminal/"
+#elif defined(_WIN32)
+#ifndef PREF_FOLDER
+#define PREF_FOLDER ""
+#endif
+#endif
+
 const char * const TERM_PREF = PREF_FOLDER "setting.mp";
 const char * const LOCALE_FILE_DEFAULT = PREF_FOLDER "menu/en";
 
diff -Nur MuTerm/src/TermIM.cpp MuTerm_working/src/TermIM.cpp
--- MuTerm/src/TermIM.cpp	Fri Jun  8 21:32:57 2001
+++ MuTerm_working/src/TermIM.cpp	Fri May 11 12:29:45 2007
@@ -17,18 +17,32 @@
 
 ***************************************************************************/
 #include <stdio.h>
-#include <Message.h>
+
+#ifndef _WIN32
 #include <unistd.h>
+#endif
+
+#ifndef USE_ETKXX
+#include <Message.h>
 #include <Input.h>
 #include <Window.h>
 //#include <UTF8.h>
 #include <TextControl.h>
 #include <support/String.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "CodeConv.h"
 #include "TermView.h"
 #include "PrefHandler.h"
 #include "spawn.h"
+
+#ifndef USE_ETKXX
 #include "libiconv/include/iconv.h"
+#else
+#include <iconv.h>
+#endif
 
 // defined TermApp.cpp
 extern int pfd;	// pesudo tty fd
@@ -42,6 +56,7 @@
 void
 TermView::DoIMStart (BMessage* msg)
 {
+#ifndef USE_ETKXX
   status_t sts;
  
   sts = msg->FindMessenger ("be:reply_to", &fIMMessenger);
@@ -53,6 +68,7 @@
     // Cursor off
     this->SetCurDraw (CUROFF);
   }
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // DoIMStop (BMessage *)
@@ -61,6 +77,7 @@
 void
 TermView::DoIMStop (BMessage* /*msg*/)
 {
+#ifndef USE_ETKXX
   this ->GetCurPos(&fIMStartPos);
 #if 0
   if (gNowCoding == M_ISO_2022_JP && fImCodeState != 0) {
@@ -74,6 +91,7 @@
   fIMflag = false;
   //Cursor on
   //  this->SetCurDraw (CURON);
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // DoIMChange (BMessage *)
@@ -82,6 +100,7 @@
 void
 TermView::DoIMChange (BMessage* msg)
 {
+#ifndef USE_ETKXX
   bool confirmed;
   const char *str;
   status_t sts;
@@ -181,6 +200,7 @@
   this->UnlockLooper();
   SetFont(&saveFont);
   SetHighColor (savecolor);
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 //
@@ -189,6 +209,7 @@
 void
 TermView::DoIMLocation (BMessage* /*msg*/)
 {
+#ifndef USE_ETKXX
   BMessage reply(B_INPUT_METHOD_EVENT);
   reply.AddInt32("be:opcode", B_INPUT_METHOD_LOCATION_REQUEST);
 
@@ -228,6 +249,7 @@
 
 end:
   fIMMessenger.SendMessage(&reply);
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // void SetIMAware (bool)
@@ -236,11 +258,13 @@
 void
 TermView::SetIMAware (bool flag)
 {
+#ifndef USE_ETKXX
   if (flag) {
     this->SetFlags (Flags() | B_INPUT_METHOD_AWARE);
   } else {
     this->SetFlags (Flags() & ~B_INPUT_METHOD_AWARE);
   }
+#endif
 }
 
 ////////////////////////////////////////////////////////////////////////////
@@ -303,6 +327,7 @@
 void
 TermView::DoIMConfirm (void)
 {
+#ifndef USE_ETKXX
   BMessage reply (B_INPUT_METHOD_EVENT);
 
   if (fIMflag) {
@@ -314,7 +339,7 @@
     fIMMessenger.SendMessage (&reply);
     fIMflag = false;
   }
-
+#endif
 }
 
 ////////////////////////////////////////////////////////////////////////////
@@ -324,7 +349,7 @@
 void
 TermView::ConfirmString (const char *str, int32 num_bytes)
 {
-
+#ifndef USE_ETKXX
 //  long state = 0;
   
   /* IM confirmed(Kakutei) process. */
@@ -354,4 +379,5 @@
   else {
      write (pfd, str, num_bytes);
   }
+#endif
 }
diff -Nur MuTerm/src/TermParse.cpp MuTerm_working/src/TermParse.cpp
--- MuTerm/src/TermParse.cpp	Thu Jun 28 14:47:13 2001
+++ MuTerm_working/src/TermParse.cpp	Wed May 16 00:57:33 2007
@@ -23,12 +23,19 @@
 #include <errno.h>
 #include <stdio.h>
 #include <signal.h>
+
+#ifndef _WIN32
 #include <unistd.h>
+#endif
 
+#ifndef USE_ETKXX
 #include <app/Application.h>
 #include <support/Beep.h>
 #include <Message.h>
 #include <MessageRunner.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 #include "TermParse.h"
 #include "TermView.h"
@@ -36,9 +43,67 @@
 #include "TermConst.h"
 #include "CodeConv.h"
 #include "Coding.h"
+
+#ifndef USE_ETKXX
 #include "libiconv/include/iconv.h"
+#else
+#include <iconv.h>
+#endif
 
+#ifndef _WIN32
 extern int pfd; // defined Muterminal.cpp
+#else
+extern HANDLE hStdPipe[2];
+#endif
+
+#define STD_READ(data, len) std_read(theObj, data, len)
+
+int
+TermParse::std_read(TermParse *theObj, void *data, size_t len)
+{
+	BString str, title;
+	int32 nRead, start, end, hasTitle;
+
+restart:
+	hasTitle = 0;
+#ifndef _WIN32
+	nRead = read(pfd, data, len);
+#else
+	DWORD dwRead = 0;
+	ReadFile(hStdPipe[0], data, len, &dwRead, NULL);
+	nRead = (int)dwRead;
+#endif
+	if(nRead <= 0) return nRead;
+
+	str.SetTo((char*)data, nRead);
+
+	while(1)
+	{
+		start = str.FindFirst("\033]0;");
+		end = (start < 0 ? -1 : str.FindFirst("\007", start));
+		if(start < 0 || end < 0) break;
+
+		hasTitle = 1;
+		str.MoveInto(title, start, end - start + 1);
+		title.MoveInto(title, 4, title.Length() - 5);
+	}
+
+	if(!hasTitle) return str.Length();
+
+	BMessenger msgr(theObj->fWinObj);
+	BMessage msg(MSG_WINDOW_TITLE);
+	msg.AddString("title", title.String());
+	msgr.SendMessage(&msg);
+
+	if(str.Length() == 0) goto restart;
+#ifndef USE_ETKXX
+	str.CopyInto((char*)data, 0, str.Length());
+#else
+	str.CopyInto((char*)data, len, 0, str.Length());
+#endif
+	return str.Length();
+}
+
 
 /////////////////////////////////////////////////////////////////////////////
 // PtyReader ... Get character from pty device.
@@ -52,7 +117,7 @@
 
   TermParse *theObj = (TermParse *) data;
   
-  uchar buf [READ_BUF_SIZE];
+  uchar buf [READ_BUF_SIZE * 2];
 
   while (theObj->fQuitting) {
     /*
@@ -66,8 +131,18 @@
     /*
      * Read PTY.
      */
-    nread = read (pfd, buf,
-		  READ_BUF_SIZE - (read_p - theObj->fParser_p));
+    nread = STD_READ (buf, READ_BUF_SIZE - (read_p - theObj->fParser_p));
+#ifdef _WIN32
+    if(nread > 0)
+    {
+      EString aStr;
+      aStr.SetTo((char*)buf, nread);
+      aStr.ReplaceAll("\r\n", "\n");
+      aStr.ReplaceAll("\n", "\r\n");
+      aStr.CopyInto((char*)buf, READ_BUF_SIZE * 2, 0, aStr.Length());
+      nread = aStr.Length();
+    }
+#endif
     if (nread <= 0) {
       be_app->PostMessage(B_QUIT_REQUESTED);
       exit_thread (B_ERROR);
@@ -96,7 +171,11 @@
     release_sem_etc (theObj->fReaderSem, nread, 0);
 
   }
+#ifndef USE_ETKXX
   theObj->fReaderThread = -1;
+#else
+  theObj->fReaderThread = NULL;
+#endif
   exit_thread (B_OK);
   return B_OK;
 }
@@ -159,11 +238,19 @@
 				      new BMessage (MSGRUN_CURSOR),
 				      1000000);
   
+#ifndef USE_ETKXX
   if (fParseThread < 0)
+#else
+  if (fParseThread == NULL)
+#endif
     fParseThread =
       spawn_thread (EscParse, "EscParse", B_DISPLAY_PRIORITY, this);
   else
+#ifndef USE_ETKXX
     return B_BAD_THREAD_ID;
+#else
+    return B_ERROR;
+#endif
   
   return (resume_thread ( fParseThread));
 
@@ -177,8 +264,12 @@
 {
 
   fWinObj = inWinObj;
-  
+
+#ifndef USE_ETKXX  
   if (fReaderThread < 0)
+#else
+  if (fReaderThread == NULL)
+#endif
     fReaderThread =
       spawn_thread (PtyReader, "PtyReader", B_NORMAL_PRIORITY, this);
   else
@@ -198,9 +289,17 @@
 
 TermParse::TermParse (void)
 {
-
+#ifndef USE_ETKXX
   fParseThread = -1;
   fReaderThread = -1;
+  fReaderSem = -1;
+  fReaderLocker = -1;
+#else
+  fParseThread = NULL;
+  fReaderThread = NULL;
+  fReaderSem = NULL;
+  fReaderLocker = NULL;
+#endif
   fLockFlag = 0;
   fParser_p = 0;
   fQuitting = 1;
@@ -214,19 +313,54 @@
   //status_t sts;
   if (cd2utf8 != (iconv_t)(-1))  iconv_close(cd2utf8);  // close libiconv
   fQuitting = 0;
-  kill_thread(fParseThread);
 
+#ifndef USE_ETKXX
+  kill_thread(fParseThread);
   kill_thread(fReaderThread);
+#else
+  e_status_t st;
+  etk_wait_for_thread(fParseThread, &st);
+  etk_wait_for_thread(fReaderThread, &st);
+  etk_delete_thread(fParseThread);
+  etk_delete_thread(fReaderThread);
+#endif
+
   delete_sem (fReaderSem);
   delete_sem (fReaderLocker);
 
 }
 
+#ifdef USE_ETKXX
+bool
+TermParse::QuitRequested(void)
+{
+  fQuitting = 0;
+
+  etk_close_sem(fReaderSem);
+  etk_close_sem(fReaderLocker);
+
+  char tmp = 0x03;
+#ifndef _WIN32
+  write(pfd, &tmp, 1);
+#else
+  DWORD dwRead = 0;
+  WriteFile(hStdPipe[1], &tmp, 1, &dwRead, NULL);
+#endif
+
+  if(etk_get_thread_run_state(fParseThread) == ETK_THREAD_RUNNING) return false;
+  if(etk_get_thread_run_state(fReaderThread) == ETK_THREAD_RUNNING) return false;
+
+  return true;
+}
+#endif
+
 //////////////////////////////////////////////////////////////////////////////
 // EscParse ... Escape sequence parse and character encoding.
 //
 //////////////////////////////////////////////////////////////////////////////
 
+extern "C" {
+
 extern int utf8_groundtable[];		/* UTF8 Ground table */
 //extern int cs96_groundtable[];		/* CS96 Ground table */
 //extern int iso8859_groundtable[];	/* ISO8859 & EUC Ground table */
@@ -241,6 +375,7 @@
 extern int eigtable[];		/* ESC ignore table */
 //extern int mbcstable[];		/* ESC $ */
 
+} // extern "C"
 
 /* MuTerminal coding system (global variable) */
 int gNowCoding = M_UTF8;
@@ -691,7 +826,11 @@
         size_t res;      //status report of iconv
         for(;;)
         {
+#ifndef ETK_OS_LINUX
            res=iconv(cd2utf8,(const char**)&inptr,&inleftsize,&outptr,&outleftsize);
+#else
+           res=iconv(cd2utf8,(char**)&inptr,&inleftsize,&outptr,&outleftsize);
+#endif
            if( res == (size_t)(-1) )
            {
               if (errno == EILSEQ)  //char not defined in code table, or wrong table
@@ -720,7 +859,11 @@
         viewObj->PutChar(dstbuf, attr, width);
      }
   }
+#ifndef USE_ETKXX
   theObj->fParseThread = -1;
+#else
+  theObj->fParseThread = NULL;
+#endif
   exit_thread (B_OK);
   return B_OK;
 }
diff -Nur MuTerm/src/TermParse.h MuTerm_working/src/TermParse.h
--- MuTerm/src/TermParse.h	Fri Jun  8 19:54:00 2001
+++ MuTerm_working/src/TermParse.h	Mon May 14 12:08:42 2007
@@ -19,8 +19,13 @@
 #ifndef TERMPARSE_H
 #define TERMPARSE_H
 
+#ifndef USE_ETKXX
 #include <kernel/OS.h>
 #include <MessageRunner.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "TermConst.h"
 
 class TermView;
@@ -44,11 +49,16 @@
   status_t AbortTermParse (void);
   status_t AbortPtyReader (void);
   
+#ifdef USE_ETKXX
+  bool QuitRequested(void);
+#endif
+
 private:
   //
   // Hook Functions.
   //
 
+  static int std_read(TermParse*, void*, size_t);
 
   // Escape Sequance parse thread.
   static int32 EscParse (void *);
diff -Nur MuTerm/src/TermView.cpp MuTerm_working/src/TermView.cpp
--- MuTerm/src/TermView.cpp	Sun Jul  1 15:37:51 2001
+++ MuTerm_working/src/TermView.cpp	Sun May 20 01:18:30 2007
@@ -17,6 +17,7 @@
 
 ***************************************************************************/
 
+#ifndef USE_ETKXX
 #include <support/Debug.h>
 #include <PopUpMenu.h>
 #include <ScrollBar.h>
@@ -28,7 +29,15 @@
 #include <Roster.h>
 #include <Autolock.h>
 #include <iostream.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
+#if !(defined(__BEOS__) || defined(_WIN32))
+#include <sys/ioctl.h>
+#endif
 
+#include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
 
@@ -44,13 +53,58 @@
 #include "MenuUtil.h"
 #include "PrefView.h"
 
+#ifndef _WIN32
 #include <termios.h>
+#endif
+
 #include <signal.h>
 #include "spawn.h"
 
+#ifndef _WIN32
+#define STD_WRITE(data, len) write(pfd, data, len)
+#else
+extern HANDLE hStdPipe[2];
+inline int STD_WRITE(const void *data, size_t len)
+{
+	HANDLE hStdin;
+	if(data == NULL || len == 0 ||
+	   (hStdin = GetStdHandle(STD_INPUT_HANDLE)) == INVALID_HANDLE_VALUE) return -1;
+
+	int nWritten = 0;
+	const char *str = (const char*)data;
+	DWORD mode = 0;
+	GetConsoleMode(hStdin, &mode);
+
+	for(; len > 0; len--, str++, nWritten++)
+	{
+		INPUT_RECORD input;
+		DWORD tmp;
+		bzero(&input, sizeof(input));
+		input.EventType = KEY_EVENT;
+		input.Event.KeyEvent.bKeyDown = TRUE;
+		input.Event.KeyEvent.wRepeatCount = 1;
+		input.Event.KeyEvent.wVirtualKeyCode = VkKeyScan(*str);
+		input.Event.KeyEvent.wVirtualScanCode = OemKeyScan((WORD)*str);
+		input.Event.KeyEvent.uChar.AsciiChar = *str;
+		if(WriteConsoleInput(hStdin, &input, 1, &tmp) == 0) break;
+
+		if((mode & (ENABLE_LINE_INPUT | ENABLE_ECHO_INPUT)) == (ENABLE_LINE_INPUT | ENABLE_ECHO_INPUT))
+		{
+			char c = *str;
+			if(c == 0x0d) c = 0x0a;
+			WriteFile(hStdPipe[1], &c, 1, &tmp, NULL);
+		}
+	}
+
+	return nWritten;
+}
+#endif
+
 // defined VTKeyTbl.c
+extern "C" {
 extern int function_keycode_table[];
 extern char *function_key_char_table[];
+} // extern "C"
 
 extern int gNowCoding;	// defined TermParse.cpp
 
@@ -146,13 +200,25 @@
   SetIMAware (gTermPref->getInt32 (PREF_IM_AWARE));
   fIMflag = false;
   
+#ifndef USE_ETKXX
   fViewThread = -1;
   fMouseThread = -1;
+  fDrawRectSem = -1;
+#else
+  fViewThread = NULL;
+  fMouseThread = NULL;
+  fMouseThreadPort = NULL;
+  fDrawRectSem = NULL;
+#endif
+
   fQuitting = 1;
   this->InitViewThread();
 
   fDrawRect_p = 0;
 
+#ifdef USE_ETKXX
+  SetEventMask(E_KEYBOARD_EVENTS);
+#endif
 }
 
 ////////////////////////////////////////////////////////////////////////////
@@ -164,11 +230,40 @@
 //  delete InputMessenger;
   delete fTextBuffer;
   fQuitting = 0;
+
+#ifndef USE_ETKXX
   kill_thread (fViewThread);
   kill_thread (fMouseThread);
+#else
+  e_status_t st;
+
+  etk_wait_for_thread(fViewThread, &st);
+  etk_wait_for_thread(fMouseThread, &st);
+
+  etk_delete_thread(fViewThread);
+  etk_delete_thread(fMouseThread);
+  etk_delete_port(fMouseThreadPort);
+#endif
+
   delete_sem (fDrawRectSem);
 }
 
+#ifdef USE_ETKXX
+bool
+TermView::QuitRequested(void)
+{
+  fQuitting = 0;
+
+  etk_close_sem(fDrawRectSem);
+  etk_close_port(fMouseThreadPort);
+
+  if(etk_get_thread_run_state(fViewThread) == ETK_THREAD_RUNNING) return false;
+  if(etk_get_thread_run_state(fMouseThread) == ETK_THREAD_RUNNING) return false;
+
+  return true;
+}
+#endif
+
 /***************************************************************************
  *
  * Public Member Functions:
@@ -286,7 +381,8 @@
   // calc half font's max width
   // Not Bounding, check only A-Z (For case of fHalfFont is KanjiFont. )
   for(int c = 0x20 ; c <= 0x7e; c++){
-    sprintf(buf, "%c", c);
+    buf[0] = (char)c;
+    buf[1] = 0;
     int  tmpWidth = (int)fHalfFont.StringWidth(buf);
     if(tmpWidth > halfWidth)  halfWidth = tmpWidth;
   }
@@ -806,7 +902,9 @@
     FillRect (r);
   }
 
+#ifndef USE_ETKXX
   Sync();
+#endif
 
   return;
 }
@@ -956,11 +1054,14 @@
 thread_id
 TermView::InitViewThread (void)
 {
-
   /*
    * spwan Draw Engine thread.
    */
+#ifndef USE_ETKXX
   if (fViewThread < 0) {
+#else
+  if (fViewThread == NULL) {
+#endif
     fViewThread = spawn_thread (ViewThread,
 				"DrawEngine",
 				B_DISPLAY_PRIORITY,
@@ -972,21 +1073,27 @@
   fDrawRectSem = create_sem (0, "draw_engine_sem");
   resume_thread (fViewThread);
 
-
   /*
    * spwan Mouse Tracking thread.
    */
+#ifndef USE_ETKXX
   if (fMouseThread < 0) {
+#else
+  if (fMouseThread == NULL) {
+#endif
     fMouseThread = spawn_thread (MouseTracking,
 				 "MouseTracking",
 				 B_NORMAL_PRIORITY,
 				 this);
+#ifdef USE_ETKXX
+    fMouseThreadPort = etk_create_port(100, NULL);
+#endif
   }
   else {
     return B_BAD_THREAD_ID;
   }
   resume_thread (fMouseThread);
-  
+
   return (fViewThread);
 }
 
@@ -1018,7 +1125,7 @@
   while (theObj->fQuitting) {
 
     // Wait semaphore
-    acquire_sem (theObj->fDrawRectSem);
+    if (acquire_sem (theObj->fDrawRectSem) != B_OK) continue;
 
     pos = theObj->fDrawRectBuffer[inDrawRect_p];
     inDrawRect_p++;
@@ -1083,7 +1190,11 @@
 TermView::MouseTracking (void *data)
 {
   int32 code, selected = false;
+#ifndef USE_ETKXX
   uint32 button;
+#else
+  int32 button;
+#endif
   thread_id sender;
   CurPos stpos, edpos;
   BPoint stpoint, edpoint;
@@ -1128,22 +1239,37 @@
     }
     else {
 #endif
+#ifndef USE_ETKXX
       code = receive_data (&sender, (void *)&stpoint, sizeof(BPoint));
+#else
+      etk_read_port(theObj->fMouseThreadPort, &code, (void *)&stpoint, sizeof(BPoint));
+#endif
     }
     
     if (code != MOUSE_THR_CODE) continue;
 
+restart:
     selected = theObj->fSelected;
     edpoint.Set (-1, -1);
 
     stpos = theObj->BPointToCurPos (stpoint);
     
     do {
+#ifndef USE_ETKXX
       snooze (40 * 1000);
       if (theObj->LockLooper()) {
 	theObj->GetMouse (&edpoint, &button);
 	theObj->UnlockLooper();
       }
+#else
+      if (etk_read_port(theObj->fMouseThreadPort, &code, (void *)&edpoint, sizeof(BPoint)) != E_OK) break;
+      if (code == MOUSE_THR_CODE)
+      {
+        stpoint = edpoint;
+	goto restart;
+      }
+      button = (code < MOUSE_THR_CODE + 2 ? 0 : 1);
+#endif
 
       edpos = theObj->BPointToCurPos (edpoint);
 
@@ -1175,7 +1301,7 @@
 	  /*
 	   * Scroll check
 	   */
-	  if (theObj->LockLooper()) {
+	  if (theObj->LockLooperWithTimeout(1000) == B_OK) {
 
 	    /* Get now scroll point */
 	    theObj->fScrollBar->GetRange (&scr_start, &scr_end);
@@ -1290,9 +1416,13 @@
   if (IS_BOLD (attr)) {
     inView->MovePenTo (x1 + 1, y1 + fFontAscent);
 	  
+#ifndef USE_ETKXX
     inView->SetDrawingMode (B_OP_OVER);
     inView->DrawString ((char *)buf);
     inView->SetDrawingMode (B_OP_COPY);
+#else
+    inView->DrawString ((char *)buf);
+#endif
   }
 	
   /*
@@ -1379,18 +1509,21 @@
 void
 TermView::UpdateSIGWINCH()
 {
-  struct winsize ws;
-  
   if (fFrameResized) {
     if (fSelected)
       this->TermDrawSelectedRegion (fSelStart, fSelEnd);
     ScrollTo (0, fTop);
     this->ResizeScrBarRange ();
 
+#ifndef _WIN32
+    struct winsize ws;
     ws.ws_row = fTermRows;
     ws.ws_col = fTermColumns;
     ioctl (pfd, TIOCSWINSZ, &ws);
     kill (-sh_pid, SIGWINCH);
+#else
+    // TODO
+#endif
 
     fFrameResized = 0;
     if (fScrRegionSet == 0) {
@@ -1410,16 +1543,16 @@
 TermView::DeviceStatusReport(int n)
 {
   char sbuf[16] ;
-  int len;
+  bzero(sbuf, sizeof(sbuf));
   
   switch (n) {
   case 5:
-    len = sprintf(sbuf,"\033[0n") ;
-    write (pfd, sbuf, len);
+    sprintf(sbuf,"\033[0n") ;
+    STD_WRITE (sbuf, strlen(sbuf));
     break ;
   case 6:
-    len = sprintf(sbuf,"\033[%d;%dR",fTermRows,fTermColumns) ;
-    write (pfd, sbuf, len);
+    sprintf(sbuf,"\033[%d;%dR",fTermRows,fTermColumns) ;
+    STD_WRITE (sbuf, strlen(sbuf));
     break ;
   default:
     return;
@@ -1489,8 +1622,10 @@
 
   y1 = (int)updateRect.top / fFontHeight;
   y2 = (int)updateRect.bottom / fFontHeight;
-
+  
+#ifndef USE_ETKXX
   Window()->BeginViewTransaction();
+#endif
   
   for (j = y1; j <= y2; j++) {
     /*
@@ -1535,8 +1670,10 @@
   if (fCursorStatus == CURON) {
     DrawCursor();
   }
-  Window()->EndViewTransaction();
 
+#ifndef USE_ETKXX
+  Window()->EndViewTransaction();
+#endif
 
   return;
 }
@@ -1614,7 +1751,13 @@
 TermView::KeyDown (const char *bytes, int32 numBytes)
 {
   char c;
+#ifndef _WIN32
+#ifdef __BEOS__
   struct termio tio;
+#else
+  struct termios tio;
+#endif
+#endif
   int32 key, mod;
 
   uchar dstbuf[1024];
@@ -1623,7 +1766,18 @@
 
   if (fIMflag)
     return;
-  
+
+#ifdef USE_ETKXX
+  char tmp;
+  if((mod & E_CONTROL_KEY) && numBytes == 1 &&
+     ((*bytes >= 'a' && *bytes <= 'z') || (*bytes >= 'A' && *bytes <= 'Z')))
+  {
+	  tmp = (*bytes <= 'Z' ? (*bytes - 'A') : (*bytes - 'a')) + 1;
+	  bytes = &tmp;
+  }
+#endif
+
+#ifndef _WIN32
   /*
    * If bytes[0] equal intr charactor,
    * send signal to shell process group.
@@ -1634,6 +1788,13 @@
       kill (-sh_pid, SIGINT);
     }
   }
+#else
+  if(*bytes == 0x03 && numBytes == 1)
+  {
+    GenerateConsoleCtrlEvent(CTRL_C_EVENT, sh_pid);
+    return;
+  }
+#endif
 
   /*
    * MuTerminal changes RET, ENTER, F1...F12, and ARROW key code.
@@ -1643,7 +1804,7 @@
     if (mod & B_OPTION_KEY) {
       c = *bytes;
       c  |= 0x80;
-      write (pfd, &c, 1);
+      STD_WRITE (&c, 1);
       return;
     }
     
@@ -1651,29 +1812,42 @@
     case B_RETURN:
       c = 0x0d;
       if (key == RETURN_KEY || key == ENTER_KEY) {
-        write (pfd, &c, 1);
+        STD_WRITE (&c, 1);
         return;
       }
       else {
-      	write (pfd, bytes, numBytes);
+#ifndef _WIN32
+      	STD_WRITE (bytes, numBytes);
+#else
+	STD_WRITE (&c, 1);
+#endif
 	return;
       }
 
     case B_LEFT_ARROW:
+#ifdef USE_ETKXX
+      key = LEFT_ARROW_KEY;
+#endif
       if (key == LEFT_ARROW_KEY) {
-        write (pfd, LEFT_ARROW_KEY_CODE, sizeof(LEFT_ARROW_KEY_CODE)-1);
+        STD_WRITE (LEFT_ARROW_KEY_CODE, sizeof(LEFT_ARROW_KEY_CODE)-1);
         return;
       }
       break;
 	    
     case B_RIGHT_ARROW:
+#ifdef USE_ETKXX
+      key = RIGHT_ARROW_KEY;
+#endif
       if (key == RIGHT_ARROW_KEY) {
-        write (pfd, RIGHT_ARROW_KEY_CODE, sizeof(RIGHT_ARROW_KEY_CODE)-1);
+        STD_WRITE (RIGHT_ARROW_KEY_CODE, sizeof(RIGHT_ARROW_KEY_CODE)-1);
         return;
       }
       break;
 
     case B_UP_ARROW:
+#ifdef USE_ETKXX
+      key = UP_ARROW_KEY;
+#endif
       if (mod & B_SHIFT_KEY) {
         if (Bounds().top <= 0)
           return;
@@ -1683,12 +1857,15 @@
       }
       
       if (key == UP_ARROW_KEY) {
-        write (pfd, UP_ARROW_KEY_CODE, sizeof(UP_ARROW_KEY_CODE)-1);
+        STD_WRITE (UP_ARROW_KEY_CODE, sizeof(UP_ARROW_KEY_CODE)-1);
         return;
       }
       break;
 
     case B_DOWN_ARROW:
+#ifdef USE_ETKXX
+      key = DOWN_ARROW_KEY;
+#endif
       if (mod & B_SHIFT_KEY) {
         ScrollBy (0, fFontHeight);
         Window()->UpdateIfNeeded();
@@ -1696,24 +1873,33 @@
       }
       
       if (key == DOWN_ARROW_KEY) {
-        write (pfd, DOWN_ARROW_KEY_CODE, sizeof(DOWN_ARROW_KEY_CODE)-1);
+        STD_WRITE (DOWN_ARROW_KEY_CODE, sizeof(DOWN_ARROW_KEY_CODE)-1);
         return;
       }
       break;
 
     case B_INSERT:
+#ifdef USE_ETKXX
+      key = INSERT_KEY;
+#endif
       if (key == INSERT_KEY) {
-        write (pfd, INSERT_KEY_CODE, sizeof(INSERT_KEY_CODE)-1);
+        STD_WRITE (INSERT_KEY_CODE, sizeof(INSERT_KEY_CODE)-1);
         return;
       }
 
     case B_HOME:
+#ifdef USE_ETKXX
+      key = HOME_KEY;
+#endif
       if (key == HOME_KEY) {
-        write (pfd, HOME_KEY_CODE, sizeof(HOME_KEY_CODE)-1);
+        STD_WRITE (HOME_KEY_CODE, sizeof(HOME_KEY_CODE)-1);
         return;
       }
 
     case B_PAGE_UP:
+#ifdef USE_ETKXX
+      key = PAGE_UP_KEY;
+#endif
       if (mod & B_SHIFT_KEY) {
         if (Bounds().top <= 0)
           return;
@@ -1723,11 +1909,14 @@
       }
       
       if (key == PAGE_UP_KEY) {
-        write (pfd, PAGE_UP_KEY_CODE, sizeof(PAGE_UP_KEY_CODE)-1);
+        STD_WRITE (PAGE_UP_KEY_CODE, sizeof(PAGE_UP_KEY_CODE)-1);
         return;
       }
 
     case B_PAGE_DOWN:
+#ifdef USE_ETKXX
+      key = PAGE_DOWN_KEY;
+#endif
       if (mod & B_SHIFT_KEY) {
         ScrollBy (0, fFontHeight * fTermRows);
         Window()->UpdateIfNeeded();
@@ -1735,13 +1924,16 @@
       }
       
       if (key == PAGE_DOWN_KEY) {
-        write (pfd, PAGE_DOWN_KEY_CODE, sizeof(PAGE_DOWN_KEY_CODE)-1);
+        STD_WRITE (PAGE_DOWN_KEY_CODE, sizeof(PAGE_DOWN_KEY_CODE)-1);
         return;
       }
       
     case B_END:
+#ifdef USE_ETKXX
+      key = END_KEY;
+#endif
       if (key == END_KEY) {
-        write (pfd, END_KEY_CODE, sizeof(END_KEY_CODE)-1);
+        STD_WRITE (END_KEY_CODE, sizeof(END_KEY_CODE)-1);
         return;
       }
       
@@ -1749,7 +1941,7 @@
     case B_FUNCTION_KEY:
       for (c = 0; c < 12; c++) {
         if (key == function_keycode_table[c]) {
-          write (pfd, function_key_char_table[c], 5);
+          STD_WRITE (function_key_char_table[c], 5);
           return;
         }
       }
@@ -1764,13 +1956,12 @@
     
     if (gNowCoding != M_UTF8) {
       int cnum = fCodeConv->ConvertFromInternal((uchar *)bytes, dstbuf);
-      write (pfd, dstbuf, cnum);
+      STD_WRITE (dstbuf, cnum);
       return;
     }
   }
 
-  write (pfd, bytes, numBytes);
-
+  STD_WRITE (bytes, numBytes);
 }
 
 /////////////////////////////////////////////////////////////////////////////
@@ -1809,11 +2000,13 @@
 void 
 TermView::MessageReceived(BMessage *msg)
 {
+#ifndef USE_ETKXX
   entry_ref ref;
+#endif
   char *ctrl_l = "";
 
   switch(msg->what){
-
+#ifndef USE_ETKXX
   case B_SIMPLE_DATA:
     if (msg->FindRef("refs", &ref) == B_OK ){
       this->DoFileDrop(ref);
@@ -1841,7 +2034,7 @@
       
     }
     break;
-    
+#endif
     
   case B_COPY:
     this->DoCopy();
@@ -1859,13 +2052,14 @@
     
   case MENU_CLEAR_ALL:
     this->DoClearAll();
-    write (pfd, ctrl_l, 1);
+    STD_WRITE (ctrl_l, 1);
     break;
 
   case MSGRUN_CURSOR:
     this->BlinkCursor ();
     break;
 
+#ifndef USE_ETKXX
   case B_INPUT_METHOD_EVENT:
     {
       int32 op;
@@ -1888,12 +2082,14 @@
 	break;
       }
     }
+#endif
 
   default:
     BView::MessageReceived(msg);
     break;
   }
 }  
+#ifndef USE_ETKXX
 ////////////////////////////////////////////////////////////////////////////
 // DoFileDrop
 //	Gets dropped file full path and display it at cursor position.
@@ -1913,6 +2109,7 @@
   return;
   
 }
+#endif
 ////////////////////////////////////////////////////////////////////////////
 // DoCopy()
 //	Copy selection text to Clipboard.
@@ -2068,10 +2265,10 @@
   if (gNowCoding != M_UTF8) {
     uchar *dstbuf = (uchar *)malloc (num_bytes * 4);
     num_bytes = fCodeConv->ConvertFromInternal(text, dstbuf);
-    write (pfd, dstbuf, num_bytes);
+    STD_WRITE (dstbuf, num_bytes);
     free (dstbuf);
   } else{
-    write (pfd, text, num_bytes);
+    STD_WRITE (text, num_bytes);
   }
 
 }
@@ -2169,7 +2366,11 @@
 	if (mod & B_CONTROL_KEY || gTermPref->getInt32 (PREF_DRAGN_COPY)) {
 	  
 	  BPoint p;
+#ifndef USE_ETKXX
 	  uint32 bt;
+#else
+	  int32 bt;
+#endif
 	  
 	  do {
 	    GetMouse (&p, &bt);
@@ -2205,8 +2406,10 @@
 		   fTermColumns * fFontWidth, ed.y + fFontHeight - fTop);
 	  }
 	  r = r & Bounds();
-	
+
+#ifndef USE_ETKXX	  
 	  DragMessage (&msg, r);
+#endif
 	  return;
 	}
       }
@@ -2231,10 +2434,18 @@
     switch (clicks){
     case 1:
       fMouseTracking = true;
+#ifndef USE_ETKXX
       send_data (fMouseThread,
 		 MOUSE_THR_CODE,
 		 (void *)&where,
 		 sizeof (BPoint));
+#else
+      etk_write_port(fMouseThreadPort,
+		     MOUSE_THR_CODE,
+		     (void *)&where,
+		     sizeof (BPoint));
+      SetPrivateEventMask(E_POINTER_EVENTS, E_LOCK_WINDOW_FOCUS);
+#endif
       break;
   
     case 2:
@@ -2269,9 +2480,12 @@
 //
 ////////////////////////////////////////////////////////////////////////////
 void
-TermView::MouseMoved (BPoint /*point*/, uint32 transit,
-		      const BMessage */*message*/)
+TermView::MouseMoved (BPoint where, uint32 transit, const BMessage *message)
 {
+#ifdef USE_ETKXX
+  etk_write_port(fMouseThreadPort, MOUSE_THR_CODE + 2, (void *)&where, sizeof(BPoint));
+#endif
+
   if (fMouseImage && Window()->IsActive ()) {
     if (transit == B_ENTERED_VIEW)
       be_app->SetCursor (B_I_BEAM_CURSOR);
@@ -2280,6 +2494,15 @@
   }
   return;
   
+}
+
+
+void
+TermView::MouseUp (BPoint where)
+{
+#ifdef USE_ETKXX
+  etk_write_port(fMouseThreadPort, MOUSE_THR_CODE + 1, (void *)&where, sizeof(BPoint));
+#endif
 }
 
 
diff -Nur MuTerm/src/TermView.h MuTerm_working/src/TermView.h
--- MuTerm/src/TermView.h	Mon May 21 23:21:34 2001
+++ MuTerm_working/src/TermView.h	Thu May 17 16:59:01 2007
@@ -19,9 +19,14 @@
 #ifndef TERMVIEW_H
 #define TERMVIEW_H
 
+#ifndef USE_ETKXX
 #include <View.h>
 #include <String.h>
 #include <MessageRunner.h>
+#else
+#include "etkxx-impl.h"
+#endif
+
 #include "TermConst.h"
 #include "TermWindow.h"
 #include "CurPos.h"
@@ -166,12 +171,16 @@
   //
   void	UpdateSIGWINCH();
   void	DeviceStatusReport (int);
-  inline void UpdateLine (void);
+  void  UpdateLine (void);
   void	ScrollScreen (void);
   void	ScrollScreenDraw (void);
   void  GetFrameSize (float *width, float *height);
   void  GetFontInfo (int *, int*);
 
+#ifdef USE_ETKXX
+  bool QuitRequested(void);
+#endif
+
   /*
    *	PRIVATE MEMBER.
    */
@@ -192,6 +201,7 @@
   void	WindowActivated (bool active);
   void	KeyDown (const char*, int32);
   void	MouseDown (BPoint where);
+  void	MouseUp (BPoint where);
   void  MouseMoved (BPoint, uint32, const BMessage *);
   
   void	FrameResized(float width, float height);
@@ -208,8 +218,10 @@
   void DoPrint(BRect updateRect);
 
   void ResizeScrBarRange (void);
-  
+
+#ifndef USE_ETKXX  
   void DoFileDrop(entry_ref &ref);
+#endif
   
   // edit menu function.
   void DoCopy (void);
@@ -267,7 +279,9 @@
   int fFontHeight;
 
   int fFontAscent;
+#ifndef USE_ETKXX
   struct escapement_delta fEscapement;
+#endif
   
   //
   // Flags.
@@ -377,6 +391,9 @@
   // thread ID / flags.
   thread_id fViewThread;
   thread_id fMouseThread;
+#ifdef USE_ETKXX
+  void *fMouseThreadPort;
+#endif
   int fQuitting;
 
   // DrawEngine parameter.
diff -Nur MuTerm/src/TermWindow.cpp MuTerm_working/src/TermWindow.cpp
--- MuTerm/src/TermWindow.cpp	Thu Jun  7 20:29:35 2001
+++ MuTerm_working/src/TermWindow.cpp	Wed May 16 00:03:17 2007
@@ -16,6 +16,7 @@
 
 *****************************************************************************/
 
+#ifndef USE_ETKXX
 #include <app/Application.h>
 #include <Menu.h>
 #include <MenuBar.h>
@@ -27,12 +28,21 @@
 #include <float.h>
 #include <WindowScreen.h>
 #include <PropertyInfo.h>
+#else
+#ifdef _WIN32
+#include <winsock2.h> // forbidden errors
+#include <windows.h>
+#endif
+#include "etkxx-impl.h"
+#endif
 
 #include <stdio.h>
-#include <sys/time.h>
 #include <string>
-#include <unistd.h>
 
+#ifndef _WIN32
+#include <sys/time.h>
+#include <unistd.h>
+#endif
 
 #include "TermApp.h"
 #include "TermParse.h"
@@ -114,7 +124,8 @@
 
   BFont halfFont;
   BFont fullFont;
-  
+
+#ifndef USE_ETKXX
   halfFont.SetFamilyAndStyle (gTermPref->getString(PREF_HALF_FONT_FAMILY),
             NULL);
   halfFont.SetSize (gTermPref->getFloat(PREF_HALF_FONT_SIZE));
@@ -124,6 +135,17 @@
             NULL);
   fullFont.SetSize (gTermPref->getFloat(PREF_FULL_FONT_SIZE));
   fullFont.SetSpacing (B_FIXED_SPACING);
+#else
+  if(etk_get_font_family_index(gTermPref->getString(PREF_HALF_FONT_FAMILY)) < 0) halfFont = *etk_plain_font;
+  else halfFont.SetFamilyAndStyle((euint32)etk_get_font_family_index(gTermPref->getString(PREF_HALF_FONT_FAMILY)) << 16);
+  halfFont.SetSize (gTermPref->getFloat(PREF_HALF_FONT_SIZE));
+  halfFont.SetSpacing (0);
+
+  if(etk_get_font_family_index(gTermPref->getString(PREF_FULL_FONT_FAMILY)) < 0) fullFont = *etk_plain_font;
+  else fullFont.SetFamilyAndStyle((euint32)etk_get_font_family_index(gTermPref->getString(PREF_FULL_FONT_FAMILY)) << 16);
+  fullFont.SetSize (gTermPref->getFloat(PREF_FULL_FONT_SIZE));
+  fullFont.SetSpacing (0);
+#endif
 
   // Make Terminal text view.
 
@@ -178,16 +200,24 @@
 	    B_V_SCROLL_BAR_WIDTH,
 	    r.Height() - B_H_SCROLL_BAR_HEIGHT + 1);
 
-  scr.OffsetBy (r.Width() + 1 , fMenubar->Bounds().Height());
+  scr.OffsetBy (r.Width() + 1 , fMenubar->Bounds().Height() + 1);
   
+#ifndef USE_ETKXX
   BScrollBar *scrbar =
     new BScrollBar (scr, "scrollbar", fTermView, 0, 0, B_VERTICAL);
+#else
+  EScrollBar *scrbar =
+    new EScrollBar (scr, "scrollbar", 0, 0, 0, E_VERTICAL);
+#endif
 
   fTermView->SetScrollBar (scrbar);
 
   this->AddChild (scrbar);
   this->AddChild (fBaseView);
 
+#ifdef USE_ETKXX
+  scrbar->SetTarget (fTermView);
+#endif
 
   //  scrview->SetTarget (fTermView);
   
@@ -212,6 +242,7 @@
   return;
     
 }
+#ifndef USE_ETKXX
 ////////////////////////////////////////////////////////////////////////////
 // void MenusBeginning (void)
 //  Dispatch MenuBegininng
@@ -223,6 +254,7 @@
   (fEncodingmenu->FindItem(op2longname(gNowCoding)))->SetMarked(true);
   BWindow::MenusBeginning();
 }
+#endif
 ////////////////////////////////////////////////////////////////////////////
 // SetupMenu(void)
 //  Makes Menu Bar.
@@ -241,6 +273,7 @@
    * Make Fiile Menu.
    */
   fFilemenu = new BMenu(menuText.getString("FileMenu"));
+#ifndef USE_ETKXX
   fFilemenu->AddItem(new BMenuItem(menuText.getString("Switch Terminals"),
            new BMessage(MENU_SWITCH_TERM),
            'G'));
@@ -248,15 +281,18 @@
            new BMessage(MENU_NEW_TREM),
            'N'));
   fFilemenu->AddSeparatorItem();
+#endif
   fFilemenu->AddItem(new BMenuItem(menuText.getString("Preference"),
            new BMessage(MENU_PREF_OPEN)));
   fFilemenu->AddSeparatorItem();
+#ifndef USE_ETKXX
   fFilemenu->AddItem(new BMenuItem(menuText.getString("Page Setup"),
            new BMessage(MENU_PAGE_SETUP)));
   fFilemenu->AddItem(new BMenuItem(menuText.getString("Print"),
            new BMessage(MENU_PRINT),
            'P'));
   fFilemenu->AddSeparatorItem();
+#endif
   fFilemenu->AddItem(new BMenuItem(menuText.getString("Quit"),
            new BMessage(MENU_FILE_QUIT),
            'Q'));
@@ -305,6 +341,7 @@
    * Make Help Menu.
    */
   fHelpmenu = new BMenu(menuText.getString("HelpMenu"));
+#ifndef USE_ETKXX
   fHelpmenu->AddItem(new BMenuItem(menuText.getString("Help"),
            new BMessage(MENU_HELP)));
   fHelpmenu->AddItem(new BMenuItem(menuText.getString("Command Help"),
@@ -312,12 +349,19 @@
   fHelpmenu->AddItem(new BMenuItem(menuText.getString("Show GPL"),
            new BMessage(MENU_SHOW_GPL)));
   fHelpmenu->AddSeparatorItem();
+#endif
   fHelpmenu->AddItem(new BMenuItem(menuText.getString("About MuTerminal"),
            new BMessage(B_ABOUT_REQUESTED)));
   fMenubar->AddItem(fHelpmenu);
 
 
   AddChild(fMenubar);
+
+#ifdef USE_ETKXX
+  fFilemenu->SetTargetForItems(this);
+  fEncodingmenu->SetTargetForItems(this);
+  fHelpmenu->SetTargetForItems(this);
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // MessageReceived (BMessage *)
@@ -386,11 +430,17 @@
     SetCoding (coding_id);
     this->SetWindowTitle ();
     break;
+
+  case MSG_WINDOW_TITLE:
+    message->FindString ("title", &fTitle);
+    this->SetWindowTitle ();
+    break;
     
   case B_ABOUT_REQUESTED:
     be_app->PostMessage(B_ABOUT_REQUESTED);
     break;
 
+#ifndef USE_ETKXX
     /*
      * Extended B_SET_PROPERTY. Dispatch this message,
      * Set coding ID.
@@ -434,6 +484,7 @@
     }
     break;
   }
+#endif
 
   /*
    * Message from Preference panel.
@@ -452,7 +503,7 @@
   case MSG_FULL_FONT_CHANGED:
   case MSG_HALF_SIZE_CHANGED:
   case MSG_FULL_SIZE_CHANGED:
-
+#ifndef USE_ETKXX
     halfFont.SetFamilyAndStyle (gTermPref->getString(PREF_HALF_FONT_FAMILY),
         NULL);
     halfFont.SetSize (gTermPref->getFloat(PREF_HALF_FONT_SIZE));
@@ -462,6 +513,17 @@
         NULL);
     fullFont.SetSize (gTermPref->getFloat(PREF_FULL_FONT_SIZE));
     fullFont.SetSpacing (B_FIXED_SPACING);
+#else
+    if(etk_get_font_family_index(gTermPref->getString(PREF_HALF_FONT_FAMILY)) < 0) halfFont = *etk_plain_font;
+    else halfFont.SetFamilyAndStyle((euint32)etk_get_font_family_index(gTermPref->getString(PREF_HALF_FONT_FAMILY)) << 16);
+    halfFont.SetSize (gTermPref->getFloat(PREF_HALF_FONT_SIZE));
+    halfFont.SetSpacing (0);
+
+    if(etk_get_font_family_index(gTermPref->getString(PREF_FULL_FONT_FAMILY)) < 0) fullFont = *etk_plain_font;
+    else fullFont.SetFamilyAndStyle((euint32)etk_get_font_family_index(gTermPref->getString(PREF_FULL_FONT_FAMILY)) << 16);
+    fullFont.SetSize (gTermPref->getFloat(PREF_FULL_FONT_SIZE));
+    fullFont.SetSpacing (0);
+#endif
 
     fTermView->SetTermFont (&halfFont, &fullFont);
     r = fTermView->SetTermSize (0, 0, 0);
@@ -574,6 +636,14 @@
   // T.Murai 1999-06-17
   // (Future plan) When command is running, Alert to user whether quit or not....
   //
+#ifdef USE_ETKXX
+  if(fTermParse->QuitRequested() == false ||
+     fTermView->QuitRequested() == false)
+  {
+	  etk_app->PostMessage(E_QUIT_REQUESTED);
+	  return false;
+  }
+#endif
   return true;
 }
 ////////////////////////////////////////////////////////////////////////////
@@ -583,12 +653,16 @@
 int
 TermWindow::GetTimeZone ()
 {
+#ifndef _WIN32
   struct timeval tv;
   struct timezone tm;
 
   gettimeofday (&tv, &tm);
 
   return -tm.tz_minuteswest / 60;
+#else
+  return 0;
+#endif
 }
 ////////////////////////////////////////////////////////////////////////////
 // doShowHelp (unit32)
@@ -636,15 +710,12 @@
 void
 TermWindow::SetWindowTitle (void)
 {
-  char windowname[256];
-  sprintf(windowname,
-	  //	    "MuTerm (%s) [%s]",
-	  gWindowName,
-	  &tty_name[8],
-	  op2longname(gNowCoding));
+  BString str;
 
-  this->SetTitle (windowname);
+  str << "MuTerm (" << &tty_name[8] << ") [" << op2longname(gNowCoding) << "]";
+  if (fTitle.Length() > 0) str << " : " << fTitle.String();
 
+  this->SetTitle (str.String());
 }
 ////////////////////////////////////////////////////////////////////////////
 // GetSupoprtedSuites (BMessage *)
@@ -656,13 +727,16 @@
   
   this->Activate();
   
+#ifndef USE_ETKXX
   if (focus_follows_mouse()) {
     BPoint aMouseLoc = this->Frame().LeftTop();
     set_mouse_position(int32(aMouseLoc.x + 16), int32(aMouseLoc.y + 2));
     be_app->SetCursor(B_HAND_CURSOR);
   }
+#endif
 }
 
+#ifndef USE_ETKXX
 ////////////////////////////////////////////////////////////////////////////
 // GetSupoprtedSuites (BMessage *)
 //
@@ -709,6 +783,7 @@
 
   return BWindow::ResolveSpecifier(msg, index, specifier, form, property);
 }
+#endif
 
 ////////////////////////////////////////////////////////////////////////////
 // SetCoding
@@ -730,6 +805,7 @@
 status_t
 TermWindow::DoPageSetup() 
 { 
+#ifndef USE_ETKXX
   status_t rv;
   BPrintJob job("PageSetup");
 
@@ -740,6 +816,9 @@
   fPrintSettings = job.Settings();
 
   return rv;
+#else
+  return B_ERROR;
+#endif
 }
   
 ////////////////////////////////////////////////////////////////////////////
@@ -749,7 +828,7 @@
 void
 TermWindow::DoPrint()
 {
-#if B_BEOS_VERSION < 0x0460
+#if B_BEOS_VERSION < 0x0460 && !defined(USE_ETKXX)
   BPrintJob job("Print"); 
 
   if((! fPrintSettings) && (DoPageSetup() != B_NO_ERROR)) {
diff -Nur MuTerm/src/TermWindow.h MuTerm_working/src/TermWindow.h
--- MuTerm/src/TermWindow.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/TermWindow.h	Fri May 11 12:29:45 2007
@@ -20,8 +20,12 @@
 #ifndef TERMWIN_H
 #define TERMWIN_H
 
+#ifndef USE_ETKXX
 #include <Window.h>
 #include <MessageRunner.h>
+#else
+#include "etkxx-impl.h"
+#endif
 
 class BFont;
 class TermView;
@@ -39,10 +43,12 @@
   void		Quit (void);
   bool		QuitRequested (void);
   void		TermWinActivate (void);
+#ifndef USE_ETKXX
   status_t	GetSupportedSuites (BMessage *msg);
   BHandler*	ResolveSpecifier (BMessage *msg, int32 index,
 				  BMessage *specifier, int32 form,
 				  const char *property);
+#endif
 
 private:
   void		InitWindow (void);
@@ -51,7 +57,9 @@
   void		WindowActivated (bool);
   int		GetTimeZone (void);
   void		SetWindowTitle (void);
+#ifndef USE_ETKXX
   void		MenusBeginning(void);
+#endif
   void		doShowHelp (uint32 command);
   // Printing
   status_t	DoPageSetup (void);
@@ -69,6 +77,7 @@
   BMessage	*fPrintSettings;
   PrefDlg	*fPrefWindow;
   FindDlg	*fFindPanel;
+  BString	fTitle;
 
   BMessageRunner *fWindowUpdate;
 
diff -Nur MuTerm/src/VTKeyTbl.c MuTerm_working/src/VTKeyTbl.c
--- MuTerm/src/VTKeyTbl.c	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/VTKeyTbl.c	Sun May 20 01:19:14 2007
@@ -36,16 +36,16 @@
 
 char *function_key_char_table [] = 
 {
-"[11~",
-"[12~",
-"[13~",
-"[14~",
-"[15~",
-"[16~",
-"[17~",
-"[18~",
-"[19~",
-"[20~",
-"[21~",
-"[22~",
+"[11~", // F1
+"[12~", // F2
+"[13~", // F3
+"[14~", // F4
+"[15~", // F5
+"[17~", // F6
+"[18~", // F7
+"[19~", // F8
+"[20~", // F9
+"[21~", // F10
+"[23~", // F11
+"[24~", // F12
 };
diff -Nur MuTerm/src/WelcomeMessage.h MuTerm_working/src/WelcomeMessage.h
--- MuTerm/src/WelcomeMessage.h	Thu Jun 28 15:43:52 2001
+++ MuTerm_working/src/WelcomeMessage.h	Sat May 12 03:49:05 2007
@@ -21,7 +21,7 @@
 
 #define MUTERM_MESSAGE "[4;34mM[31mu[mTerm"
 
-#define LANG_MAX 17
+#define LANG_MAX 18
 #define TIME_MES_MAX 3
 
 const char *welcome_message[] = {
@@ -42,12 +42,21 @@
   "\n%s, ¡Bienvenido a %s!\n",		/* Spanish */
   "\n%s, Välkommen til %s!\n",		/* Swedish */
   "\n%s, 歡迎來到 %s 的世界!\n",   // Traditional Chinese
- 
+  "\n%s, 欢迎来到 %s 的世界！\n",  // Simplified Chines 
 };
 
 const char *hello_message[LANG_MAX][TIME_MES_MAX] = {
   {"Good Morning", "Hello", "Good Evening"}, 		/* English */
+#ifndef _MSC_VER
+
   {"おはよう", "こんにちは", "こんばんは"},		/* Japanese */
+#else
+  {
+"\xe3\x81\x8a\xe3\x81\xaf\xe3\x82\x88\xe3\x81\x86",
+"\xe3\x81\x93\xe3\x82\x93\xe3\x81\xab\xe3\x81\xa1\xe3\x81\xaf",
+"\xe3\x81\x93\xe3\x82\x93\xe3\x81\xb0\xe3\x82\x93\xe3\x81\xaf"
+  },
+#endif
   {"Dobro jutro", "Dobro dan", "Dobro večer"},		/* Croatian */
   {"Dobré ráno", "Dobrý den", "Dobrý večer"},		/* Czecho */
   {"God morgen", "God dag", "God aftn"},		/* Danish */
@@ -63,9 +72,16 @@
   {"Buenos días", "Buenos tardes", "Buenos noches"}, 	/* Spanish */
   {"God morgon", "God dag", "God kväll"},	 	/* Swedish */
   {"早安", "您好", "晚安"}, 	// Traditional Chinese
-
+#ifndef _MSC_VER
+  {"早上好", "您好", "晚上好"},  // Simplified Chinese
+#else
+  {
+"\xe6\x97\xa9\xe4\xb8\x8a\xe5\xa5\xbd",
+"\xe6\x82\xa8\xe5\xa5\xbd",
+"\xe6\x99\x9a\xe4\xb8\x8a\xe5\xa5\xbd"
+  },
+#endif
 };
-
 
 #endif /* TERMCONST_H_INCLUDED */
 
diff -Nur MuTerm/src/etkxx-impl.h MuTerm_working/src/etkxx-impl.h
--- MuTerm/src/etkxx-impl.h	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/etkxx-impl.h	Sat May 12 01:04:57 2007
@@ -0,0 +1,212 @@
+#ifndef __ETKXX_IMPL_H__
+#define __ETKXX_IMPL_H__
+
+#ifdef _WIN32
+#include <winsock2.h>
+#include <windows.h>
+#endif
+
+#include <etkxx.h>
+
+#ifdef ETK_LITTLE_ENDIAN
+#define __INTEL__
+#else
+#define __POWERPC__
+#endif
+
+#define int8			eint8
+#define int16			eint16
+#define int32			eint32
+#define int64			eint64
+#define uint8			euint8
+#define uint16			euint16
+#define uint32			euint32
+#define uint64			euint64
+
+#define uchar			unsigned char
+#define uint			unsigned int
+#define ulong			unsigned long
+
+#define team_id			eint64
+#define status_t		e_status_t
+#define bigtime_t		e_bigtime_t
+#define type_code		e_type_code
+
+#define thread_id		void*
+#define sem_id			void*
+#define sem_info		etk_sem_info
+
+#define B_OK			E_OK
+#define B_NO_ERROR		E_OK
+#define B_ERROR			E_ERROR
+
+#define B_MIME_TYPE		E_MIME_TYPE
+#define B_STRING_TYPE		E_STRING_TYPE
+
+// kernel kit
+#define real_time_clock()	e_real_time_clock()
+#define beep()			(void)0
+#define snooze(usec)		e_snooze(usec)
+#define spawn_thread(a,b,c,d)	etk_create_thread(a,c,d,NULL)
+#define resume_thread(arg)	etk_resume_thread(arg)
+#define exit_thread(s)		etk_exit_thread(s)
+
+#define create_sem(a,b)		etk_create_sem(a,NULL)
+#define delete_sem(sem)		etk_delete_sem(sem)
+#define acquire_sem(sem)	etk_acquire_sem(sem)
+#define acquire_sem_etc(a,b,c,d)	etk_acquire_sem_etc(a,b,c,d)
+#define release_sem(sem)	etk_release_sem(sem)
+#define release_sem_etc(a,b,c)	etk_release_sem_etc(a,b,c)
+#define get_sem_info(a,b)	etk_get_sem_info(a,b)
+
+#define B_DISPLAY_PRIORITY	E_DISPLAY_PRIORITY
+#define B_NORMAL_PRIORITY	E_NORMAL_PRIORITY
+#define B_BAD_THREAD_ID		NULL
+#define B_TIMEOUT		E_TIMEOUT
+#define B_TIMED_OUT		E_TIMED_OUT
+
+#ifdef __cplusplus
+
+// support kit
+#define BString			EString
+#define BList			EList
+
+// storage kit
+#define B_READ_ONLY		E_READ_ONLY
+#define B_WRITE_ONLY		E_WRITE_ONLY
+#define B_CREATE_FILE		E_CREATE_FILE
+#define B_ERASE_FILE		E_ERASE_FILE
+
+#define B_PATH_NAME_LENGTH	E_MAXPATH
+#define BEntry			EEntry
+#define BPath			EPath
+#define BFile			EFile
+#define BDirectory		EDirectory
+
+#define BFilePanel		EFilePanel
+#define B_SAVE_PANEL		E_SAVE_PANEL
+
+// app kit
+#define B_FIELD_NAME_LENGTH	1024
+#define B_QUIT_REQUESTED	E_QUIT_REQUESTED
+#define B_REPLY			E_REPLY
+#define be_app			etk_app
+#define be_clipboard		(&etk_clipboard)
+
+#define BMessage		EMessage
+#define FindData		__FindData
+
+#define BMessageRunner		EMessageRunner
+#define BMessenger		EMessenger
+#define BHandler		EHandler
+#define BLooper			ELooper
+#define BApplication		EApplication
+#define BInvoker		EInvoker
+#define BClipboard		EClipboard
+
+#define BCursor			ECursor
+#define B_HAND_CURSOR		E_CURSOR_HAND
+#define B_I_BEAM_CURSOR		E_CURSOR_I_BEAM
+
+
+// interface kit
+#define rgb_color		e_rgb_color
+#define ui_color(w)		e_ui_color(w)
+#define B_PANEL_BACKGROUND_COLOR	E_PANEL_BACKGROUND_COLOR
+#define B_UTF8_COPYRIGHT	"\xC2\xA9"
+
+#define B_VERTICAL		E_VERTICAL
+#define B_COPY			'COPY'
+#define B_PASTE			'PSTE'
+#define B_SELECT_ALL		'SALL'
+#define B_ABOUT_REQUESTED	E_ABOUT_REQUESTED
+#define B_SAVE_REQUESTED	'SAVE'
+
+#define BPoint			EPoint
+#define BRect			ERect
+
+#define BWindow			EWindow
+#define B_TITLED_WINDOW_LOOK	E_TITLED_WINDOW_LOOK
+#define B_NORMAL_WINDOW_FEEL	E_NORMAL_WINDOW_FEEL
+#define B_FLOATING_APP_WINDOW_FEEL	E_FLOATING_APP_WINDOW_FEEL
+#define B_DOCUMENT_WINDOW	E_DOCUMENT_WINDOW
+#define B_NOT_ZOOMABLE		E_NOT_ZOOMABLE
+#define B_NOT_RESIZABLE		E_NOT_RESIZABLE
+#define B_CURRENT_WORKSPACE	E_CURRENT_WORKSPACE
+#define IsActive		IsActivate
+
+#define BView			EView
+#define B_FOLLOW_NONE		E_FOLLOW_NONE
+#define B_FOLLOW_ALL_SIDES	E_FOLLOW_ALL
+#define B_WILL_DRAW		E_WILL_DRAW
+#define B_FRAME_EVENTS		E_FRAME_EVENTS
+#define B_PULSE_NEEDED		E_PULSE_NEEDED
+#define B_OP_OVER		E_OP_OVER
+#define B_OP_COPY		E_OP_COPY
+#define B_OP_MIN		E_OP_MIN
+#define B_EXITED_VIEW		E_EXITED_VIEW
+#define B_ENTERED_VIEW		E_ENTERED_VIEW
+
+#define B_COMMAND_KEY		E_COMMAND_KEY
+#define B_OPTION_KEY		E_OPTION_KEY
+#define B_RETURN		E_RETURN
+#define B_LEFT_ARROW		E_LEFT_ARROW
+#define B_RIGHT_ARROW		E_RIGHT_ARROW
+#define B_UP_ARROW		E_UP_ARROW
+#define B_SHIFT_KEY		E_SHIFT_KEY
+#define B_DOWN_ARROW		E_DOWN_ARROW
+#define B_ESCAPE		E_ESCAPE
+#define B_INSERT		E_INSERT
+#define B_HOME			E_HOME
+#define B_PAGE_DOWN		E_PAGE_DOWN
+#define B_PAGE_UP		E_PAGE_UP
+#define B_FUNCTION_KEY		E_FUNCTION_KEY
+#define B_END			E_END
+#define B_CONTROL_KEY		E_CONTROL_KEY
+#define B_PRIMARY_MOUSE_BUTTON	E_PRIMARY_MOUSE_BUTTON
+#define B_SECONDARY_MOUSE_BUTTON	E_SECONDARY_MOUSE_BUTTON
+#define B_TERTIARY_MOUSE_BUTTON	E_TERTIARY_MOUSE_BUTTON
+
+#define BMenu			EMenu
+#define BMenuBar		EMenuBar
+#define BMenuItem		EMenuItem
+#define BPopUpMenu		EPopUpMenu
+
+#define BFont			EFont
+#define B_FIXED_SPACING		0
+#define font_height		e_font_height
+#define font_family		e_font_family
+#define count_font_families()	etk_count_font_families()
+
+#define BTextView		ETextView
+#define BBitmap			EBitmap
+
+#define BScrollBar		EScrollBar
+#define B_V_SCROLL_BAR_WIDTH	E_V_SCROLL_BAR_WIDTH
+#define B_H_SCROLL_BAR_HEIGHT	E_H_SCROLL_BAR_HEIGHT
+
+#define BTextControl		ETextControl
+#define BColorControl		EColorControl
+#define BBox			EBox
+#define BButton			EButton
+#define BTabView		ETabView
+#define BRadioButton		ERadioButton
+#define BCheckBox		ECheckBox
+#define BMenuField		EMenuField
+#define BStringView		EStringView
+
+#define BAlert			EAlert
+#define B_WIDTH_FROM_LABEL	E_WIDTH_FROM_LABEL
+#define B_INFO_ALERT		E_INFO_ALERT
+#define B_WARNING_ALERT		E_WARNING_ALERT
+#define B_WIDTH_AS_USUAL	E_WIDTH_AS_USUAL
+#define B_WIDTH_FROM_WIDEST	E_WIDTH_FROM_LABEL
+
+enum color_control_layout {
+	B_CELLS_32x8 = 0,
+};
+
+#endif
+
+#endif /* __ETKXX_IMPL_H__ */
+
diff -Nur MuTerm/src/menu/Simplified Chinese MuTerm_working/src/menu/Simplified Chinese
--- MuTerm/src/menu/Simplified Chinese	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/menu/Simplified Chinese	Thu May 17 14:45:16 2007
@@ -0,0 +1,99 @@
+######### -*- coding:utf-8-unix -*- ###################
+# Simplified Chinese menu
+########################################################
+
+### Terminal menu
+"FileMenu",		"终端"
+"Switch Terminals",	"切换终端"
+"Start New Terminal",	"开启新终端"
+"Preference",		"设置…"
+"Page Setup",		"打印设置…"
+"Print",		"打印…"
+"Quit",			"退出"
+
+### Edit menu
+"EditMenu",		"编辑"
+"Copy",			"复制"
+"Paste",		"粘贴"
+"Select All",		"全选"
+"Clear All",		"清除选区"
+"Find",			"寻找…"
+"Find Again",		"寻找下一个"
+
+### Coding menu
+"Encodings",		"编码"
+
+### Help menu
+"HelpMenu",		"帮助"
+"Help",			"帮助…"
+"Command Help",		"命令行帮助…"
+"Show GPL",		"GPL 版权说明…"
+"About MuTerminal",	"关于 MuTerminal…"
+
+########################################################
+# Preference panel
+########################################################
+"PrefWindow",		"设置"
+"Appearance",		"外观"
+"Mouse",		"鼠标"
+"Shell",		"Shell"
+"Language",		"语言"
+"Color",		"颜色"
+
+"PrefOK",		"储存设置"
+"PrefSave",		"另存为"
+"PrefCancel",		"回复"
+########################################################
+# Appearance panel
+########################################################
+"Columns Label",	"列数"
+"Rows Label",		"行数"
+"HalfFont Label",	"半角字体"
+"HalfSize Label",	"大小"
+"FullFont Label",	"全角字体"
+"FullSize Label",	"大小"
+"Text Fore Label",	"文字前景颜色"
+"Text back Label",	"文字背景颜色"
+"Selection Fore Label",	"选择区前景颜色"
+"Selection Back Label",	"选择区背景颜色"
+"Cursor Fore Label",	"光标前景颜色"
+"Cursor Back Label",	"光标背景颜色"
+
+"Disable",		"关闭"
+"Button 1",		"左键"
+"Button 2",		"中键"
+"Button 3",		"右键"
+"Red",			"红"
+"Green",		"绿"
+"Blue",			"蓝"
+
+########################################################
+# Mouse panel
+########################################################
+"Select Region",	"选择区域"
+"SubMenu Label",	"弹出式选单"
+"Paste Label",		"粘贴文字"
+"Cursor Image",		"鼠标样式"
+"Hand Cursor",		"手状"
+"I Beam Cursor",	"I 形"
+"Drag'n Copy"		"拖曳粘贴"
+
+########################################################
+# Shell panel
+########################################################
+"Shell Label",		"Shell"
+"History Size",		"历史记录大小"
+"Cursor Blinking",	"光标闪烁速度"
+
+########################################################
+# Language panel
+########################################################
+"Code Label",		"启动时，编码预设为"
+"Language Label",	"图形界面使用语言"
+"IMAware Label",	"处理输入法"
+########################################################
+# Help file language
+########################################################
+"Help File Language",	"ch"
+
+# end
diff -Nur MuTerm/src/menu/Traditional Chinese MuTerm_working/src/menu/Traditional Chinese
--- MuTerm/src/menu/Traditional Chinese	Thu Jun 28 13:56:44 2001
+++ MuTerm_working/src/menu/Traditional Chinese	Wed May 16 00:27:13 2007
@@ -47,8 +47,8 @@
 ########################################################
 # Appearance panel
 ########################################################
-"Columns Label",	"行數"
-"Rows Label",		"列數"
+"Columns Label",	"列數"
+"Rows Label",		"行數"
 "HalfFont Label",	"半形字型"
 "HalfSize Label",	"大小"
 "FullFont Label",	"全形字型"
@@ -103,4 +103,4 @@
 # Pleae correct this and let me know more appropriate  expression.
 ########################################################
 
-# end
\ No newline at end of file
+# end
diff -Nur MuTerm/src/spawn.cpp MuTerm_working/src/spawn.cpp
--- MuTerm/src/spawn.cpp	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/spawn.cpp	Thu May 17 16:43:28 2007
@@ -16,21 +16,37 @@
 
 */
 
-#include <sys/param.h>
-#include <sys/file.h>
+#ifdef _WIN32
+#define _WIN32_WINNT 0x500 // for GetConsoleWindow()
+#endif
+
 #include <stdio.h>
 #include <stdlib.h>
-#include <unistd.h>
 #include <string.h>
 #include <stddef.h>
 #include <stdio.h>
 #include <signal.h>
 #include <errno.h>
+#if !(defined(__BEOS__) || defined(_WIN32))
+#include <sys/ioctl.h>
+#endif
+#ifndef _WIN32
+#include <sys/param.h>
+#include <sys/file.h>
+#include <unistd.h>
 #include <termios.h>
+#else
+#include <winsock2.h> // forbidden errors
+#include <windows.h>
+#include <process.h>
+#include <conio.h>
+#endif
 #include <fcntl.h>
 #include <sys/stat.h>
 #include <time.h>
+#ifndef USE_ETKXX
 #include <kernel/OS.h>
+#endif
 
 #include "TermConst.h"
 #include "spawn.h"
@@ -41,7 +57,6 @@
 
 /* default shell command and options. */
 #define SHELL_COMMAND "/bin/sh -login"
-extern char **environ;
 
 char spawn_alert_msg [] = \
 "alert --stop " \
@@ -53,7 +68,7 @@
 /*
  * Set environment varriable.
  */
-
+#ifndef _WIN32
 void
 Setenv (const char *var, const char *value)
 {
@@ -75,6 +90,15 @@
   sprintf (environ [envindex], "%s%s", var, value);
   environ [++envindex] = NULL;
 }
+#else
+void
+Setenv (const char *var, const char *value)
+{
+	EString str;
+	str << var << value;
+	_putenv(str.String());
+}
+#endif
 
 /*
  * reapchild. Child process is out there, let's catch its terminaltion.
@@ -97,12 +121,16 @@
   char msg[256];	/* error message */
   int row;		/* terminal rows */
   int col;		/* Terminal columns */
+#ifdef _WIN32
+  DWORD id;
+#endif
 } handshake_t;
 
 /* status of handshake */
 #define PTY_OK	0	/* pty open and set termios OK */
 #define PTY_NG	1	/* pty open or set termios NG */
 #define PTY_WS	2	/* pty need WINSIZE (row and col ) */
+#define PTY_ID	3
 
 /* global varriables */
 
@@ -110,6 +138,40 @@
 char tty_name[16];
 int pfd_num = 0;
 
+static void
+print_welcome_msg(void)
+{
+  float msg_rand;
+  time_t now_time_t;
+  struct tm *now_time;
+  int now_hour;
+
+  /*
+   * Print Welcome MuTerm World! Message.
+   * (But, Only print message when MuTerminal coding is UTF8.)
+   */
+  now_time_t = time(NULL);
+  now_time = localtime (&now_time_t);
+
+  if (now_time->tm_hour >= 5 && now_time->tm_hour < 11) {
+    now_hour = 0;
+  } else if (now_time->tm_hour >= 11 && now_time->tm_hour <= 18 ) {
+    now_hour = 1;
+  } else {
+    now_hour = 2;
+  }
+
+  if (strcmp (gTermPref->getString (PREF_TEXT_ENCODING), "UTF-8")) {
+    msg_rand = 0;
+  } else {
+    srand ((uint)real_time_clock() & 0xFFFF);
+    msg_rand = (float) rand() / (float)(RAND_MAX / LANG_MAX);
+  }
+
+  printf(welcome_message[(int)msg_rand], hello_message[(int)msg_rand][now_hour], MUTERM_MESSAGE);
+}
+
+#ifndef _WIN32
 int
 spawn_shell (int row, int col, const char *command, const char *coding)
 {
@@ -118,7 +180,12 @@
   pid_t pgrp;
   
   int master, slave;
+#ifdef __BEOS__
   struct termio tio;
+#else
+  struct termios tio;
+# define VSWTCH VSWTC
+#endif
   struct winsize ws;
   
   handshake_t handshake;
@@ -126,17 +193,12 @@
   char pty_name[16];
 
   int i = 0;
-  float msg_rand;
-  time_t now_time_t;
-  struct tm *now_time;
-  int now_hour;
   
   char *args[16];
   char com_line[256];
   char *ptr;
 
   char err_msg[256];
-  char hello_msg[256];
 
   signal (SIGTTOU, SIG_IGN);
 
@@ -393,31 +455,7 @@
 
    Setenv ("SHELL=", *args);
   
-   /*
-    * Print Welcome MuTerm World! Message.
-    * (But, Only print message when MuTerminal coding is UTF8.)
-    */
-   now_time_t = time(NULL);
-   now_time = localtime (&now_time_t);
-
-   if (now_time->tm_hour >= 5 && now_time->tm_hour < 11) {
-     now_hour = 0;
-   } else if (now_time->tm_hour >= 11 && now_time->tm_hour <= 18 ) {
-     now_hour = 1;
-   } else {
-     now_hour = 2;
-   }
-
-   if (strcmp (gTermPref->getString (PREF_TEXT_ENCODING), "UTF-8")) {
-     msg_rand = 0;
-   } else {
-     srand ((uint)real_time_clock() & 0xFFFF);
-     msg_rand = (float) rand() / (float)(RAND_MAX / LANG_MAX);
-   }
-   
-   i = sprintf (hello_msg, welcome_message[(int)msg_rand],
-		hello_message[(int)msg_rand][now_hour], MUTERM_MESSAGE);
-   write (1, hello_msg, i);
+   print_welcome_msg();
    
    execve (*args, args, environ);
 
@@ -470,4 +508,277 @@
   
   return (done > 0) ? master : -1;
 }
+#else
+
+bool win32_find_msys_directory(EPath &path)
+{
+	bool retVal = false;
+
+	EString strPaths = getenv("PATH");
+	EStringArray *array = strPaths.Split(";");
+	if(array != NULL)
+	{
+		for(eint32 i = 0; i < array->CountItems(); i++)
+		{
+			const EString *strPath = array->ItemAt(i);
+
+			EPath aPath(strPath->String(), "sh.exe", true);
+			if(aPath.Path() == NULL) continue;
+
+			aPath.Unset();
+			aPath.SetTo(strPath->String(), "true.exe", true);
+			if(aPath.Path() == NULL) continue;
+
+			aPath.Unset();
+			aPath.SetTo(strPath->String(), "false.exe", true);
+			if(aPath.Path() == NULL) continue;
+
+			path.SetTo(strPath->String());
+			path.GetParent(&path);
+			retVal = true;
+			break;
+		}
+		delete array;
+	}
+
+	return retVal;
+}
+
+void win32_find_root_directory(EPath &path, bool no_msys)
+{
+	if(!no_msys)
+		if(win32_find_msys_directory(path)) return;
+
+	char buf[E_MAXPATH + 1];
+	bzero(buf, sizeof(buf));
+	GetModuleFileName((HMODULE)GetModuleHandle(NULL), buf, E_MAXPATH);
+	path.SetTo(buf);
+	path.GetParent(&path);
+	path.GetParent(&path);
+}
+
+
+BOOL WINAPI ConsoleHandle(DWORD event)
+{
+	HANDLE hProcess;
+
+	switch(event)
+	{
+		case CTRL_C_EVENT:
+			GenerateConsoleCtrlEvent(CTRL_BREAK_EVENT, sh_pid);
+			break;
+
+		default:
+			hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, sh_pid);
+			GenerateConsoleCtrlEvent(event, sh_pid);
+			TerminateProcess(hProcess, 0);
+			CloseHandle(hProcess);
+			break;
+	}
+
+	return TRUE;
+}
+
+
+HANDLE hStdPipe[2] = {NULL, NULL};
+
+
+int
+spawn_shell (int row, int col, const char *command, const char *coding)
+{
+	void *port = NULL;
+	eint32 code;
+
+	handshake_t handshake;
+
+	memcpy(tty_name, "        Win32", 14);
+
+	if((port = etk_open_port("MuTerminal Port")) == NULL)
+	{
+		if((port = etk_create_port(1, "MuTerminal Port")) == NULL) return -1;
+
+		SECURITY_ATTRIBUTES saAttr;
+		saAttr.nLength = sizeof(SECURITY_ATTRIBUTES);
+		saAttr.bInheritHandle = TRUE;
+		saAttr.lpSecurityDescriptor = NULL;
+
+		if(CreatePipe(&hStdPipe[0], &hStdPipe[1], &saAttr, 0) == 0)
+		{
+			etk_delete_port(port);
+			ETK_OUTPUT("%s(%d): CreatePipe() failed !!!", __FILE__, __LINE__);
+			return -1;
+		}
+
+		HANDLE hSaveStdout = GetStdHandle(STD_OUTPUT_HANDLE);
+		HANDLE hSaveStderr = GetStdHandle(STD_ERROR_HANDLE);
+
+		SetStdHandle(STD_OUTPUT_HANDLE, hStdPipe[1]);
+		SetStdHandle(STD_ERROR_HANDLE, hStdPipe[1]);
+
+		STARTUPINFO sh_startup_info;
+		PROCESS_INFORMATION sh_process_info;
+
+		bzero(&sh_process_info, sizeof(sh_process_info));
+		bzero(&sh_startup_info, sizeof(sh_startup_info));
+		sh_startup_info.cb = sizeof(sh_startup_info);
+
+		if(CreateProcess(NULL, GetCommandLine(), NULL, NULL, TRUE, CREATE_NEW_PROCESS_GROUP,
+				 NULL, NULL, &sh_startup_info, &sh_process_info))
+			sh_pid = sh_process_info.dwProcessId;
+		else
+			sh_pid = (DWORD)-1;
+
+		SetStdHandle(STD_OUTPUT_HANDLE, hSaveStdout);
+		SetStdHandle(STD_ERROR_HANDLE, hSaveStderr);
+
+		if(sh_pid == (DWORD)-1)
+		{
+			CloseHandle(hStdPipe[0]);
+			CloseHandle(hStdPipe[1]);
+			etk_delete_port(port);
+			ShowWindowAsync(GetConsoleWindow(), SW_SHOW);
+			return -1;
+		}
+
+		CloseHandle(sh_process_info.hProcess);
+		CloseHandle(sh_process_info.hThread);
+	}
+	else // child
+	{
+		// FIXME: only works on Win2K/XP
+		ShowWindowAsync(GetConsoleWindow(), SW_HIDE);
+
+		Setenv("TERM=", "xterm");
+		Setenv("TTYPE=", coding);
+
+		EString comStr(command ? command : SHELL_COMMAND);
+		EString prog;
+		comStr.ReplaceAll("\t", " ");
+		while(true)
+		{
+			eint32 oldLength = comStr.Length();
+			comStr.ReplaceAll("  ", " ");
+			if(oldLength == comStr.Length())
+			{
+				if(comStr[0] == ' ') comStr.Remove(0, 1);
+
+				eint32 last = comStr.FindFirst(" ");
+				comStr.MoveInto(prog, 0, last < 0 ? comStr.Length() : last);
+				Setenv("SHELL=", prog.String());
+
+				if(prog[0] == '/')
+				{
+					EPath aPath;
+					win32_find_root_directory(aPath, false);
+					prog.Prepend(aPath.Path());
+				}
+				if(prog.FindLast(".exe") != prog.Length() - 4) prog.Append(".exe");
+				prog.ReplaceAll("/", "\\");
+
+				char buf[E_MAXPATH + 1];
+				bzero(buf, sizeof(buf));
+				if(GetShortPathName(prog.String(), buf, E_MAXPATH) != 0) prog = buf;
+
+				comStr.Prepend(prog);
+
+				break;
+			}
+		}
+
+		char cmdPath[E_MAXPATH + 1];
+		bzero(cmdPath, sizeof(cmdPath));
+		GetWindowsDirectory(cmdPath, E_MAXPATH);
+		memcpy(cmdPath + strlen(cmdPath), "\\system32\\cmd.exe", 18);
+		Setenv("COMSPEC=", cmdPath);
+
+		EEntry aEntry(prog.String());
+		if(!aEntry.Exists())
+		{
+			printf("[MUTERM]: Could not found \"%s\"\n\n", prog.String());
+			prog = comStr = cmdPath;
+		}
+
+		print_welcome_msg();
+		_flushall();
+
+		if(SetConsoleCtrlHandler(NULL, FALSE) == 0 ||
+		   SetConsoleCtrlHandler(ConsoleHandle, TRUE) == 0)
+		{
+			handshake.status = PTY_NG;
+			sprintf(handshake.msg, "SetConsoleCtrlHandler() failed !!!");
+			etk_write_port(port, 0, &handshake, sizeof(handshake));
+			etk_delete_port(port);
+			exit(1);
+		}
+
+		STARTUPINFO sh_startup_info;
+		PROCESS_INFORMATION sh_process_info;
+
+		bzero(&sh_process_info, sizeof(sh_process_info));
+		bzero(&sh_startup_info, sizeof(sh_startup_info));
+		sh_startup_info.cb = sizeof(sh_startup_info);
+
+		if(CreateProcess(prog.String(), (char*)comStr.String(), NULL, NULL, TRUE, CREATE_NEW_PROCESS_GROUP,
+				 NULL, NULL, &sh_startup_info, &sh_process_info) == 0)
+		{
+			handshake.status = PTY_NG;
+			sprintf(handshake.msg, "Could not create the process !!!");
+			etk_write_port(port, 0, &handshake, sizeof(handshake));
+			etk_delete_port(port);
+			exit(1);
+		}
+
+		sh_pid = sh_process_info.dwProcessId;
+
+		while(true)
+		{
+			handshake.status = PTY_ID;
+			handshake.id = (DWORD)-1;
+			etk_write_port(port, 0, &handshake, sizeof(handshake));
+			e_snooze(1000);
+			if(etk_read_port(port, &code, &handshake, sizeof(handshake)) == E_OK && handshake.id != (DWORD)-1) break;
+		}
+
+		handshake.status = PTY_OK;
+		etk_write_port(port, 0, &handshake, sizeof(handshake));
+		etk_delete_port(port);
+
+		WaitForSingleObject(sh_process_info.hProcess, INFINITE);
+		CloseHandle(sh_process_info.hProcess);
+		CloseHandle(sh_process_info.hThread);
+
+		HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, handshake.id);
+		TerminateProcess(hProcess, 0);
+		CloseHandle(hProcess);
+
+		exit(1);
+	}
+
+	int done = 0;
+	while(done == 0)
+	{
+		if(etk_read_port(port, &code, &handshake, sizeof(handshake)) != E_OK) break;
+		switch(handshake.status)
+		{
+			case PTY_ID:
+				handshake.id = GetCurrentProcessId();
+				etk_write_port(port, 0, &handshake, sizeof(handshake));
+				break;
+
+			case PTY_OK:
+				done = 1;
+				break;
+
+			case PTY_NG:
+				ETK_OUTPUT("[MUTERM]: *** ERROR: %s\n", handshake.msg);
+				done = -1;
+				break;
+		}
+	}
+
+	etk_delete_port(port);
+
+	return(done == 1 ? 1 : -1);
+}
+#endif
 
diff -Nur MuTerm/src/spawn.h MuTerm_working/src/spawn.h
--- MuTerm/src/spawn.h	Sun Apr  2 23:00:00 2000
+++ MuTerm_working/src/spawn.h	Fri May 11 12:29:45 2007
@@ -23,15 +23,23 @@
  * allow for mobility of the pty master/slave directories
  */
 
+#ifdef __BEOS__
 #define	PTYDEV		"/dev/pt/%c%c"
 #define TTYDEV		"/dev/tt/%c%c"
 
+#define TTYFORMAT	"/dev/tt/%d"
+#define PTYFORMAT	"/dev/pt/%d"
+#else
+#define	PTYDEV		"/dev/pty%c%c"
+#define TTYDEV		"/dev/tty%c%c"
+
+#define TTYFORMAT	"/dev/tty%d"
+#define PTYFORMAT	"/dev/pty%d"
+#endif
+
 #define PTYCHAR1	"pqrs"
 #define	PTYCHAR2	"0123456789abcdef"
 
-#define TTYFORMAT "/dev/tt/%d"
-#define PTYFORMAT "/dev/pt/%d"
-
 #define MAXPTTYS 16 * 4
 
 #ifndef CEOF
@@ -87,9 +95,12 @@
 int spawn_shell (int, int, const char *, const char *);
 void Setenv (const char *, const char *);
 
+#ifdef _WIN32
+#define pid_t DWORD
+#endif
+
 extern pid_t sh_pid;	/* shell process ID */
 extern char tty_name[];	/* tty device file name */
 extern int pfd_num;	/* number of pfd */
-
 
 #endif /* SPAWN_H */
diff -Nur MuTerm/src/win32/MuTerminal.rc MuTerm_working/src/win32/MuTerminal.rc
--- MuTerm/src/win32/MuTerminal.rc	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/win32/MuTerminal.rc	Sat May 12 06:36:42 2007
@@ -0,0 +1,34 @@
+#include <winver.h>
+
+VS_VERSION_INFO VERSIONINFO
+ FILEVERSION 2,4,0,0
+ PRODUCTVERSION 2,4,0,0
+ FILEFLAGSMASK 0x0L
+#ifdef _DEBUG
+ FILEFLAGS 0x1L
+#else
+ FILEFLAGS 0x0L
+#endif
+ FILEOS 0x4L
+ FILETYPE 0x2L
+ FILESUBTYPE 0x0L
+BEGIN
+    BLOCK "StringFileInfo"
+    BEGIN
+        BLOCK "000004b0"
+        BEGIN
+            VALUE "FileDescription", "MuTerminal"
+            VALUE "FileVersion", "2.4.0"
+            VALUE "InternalName", "MuTerminal.exe"
+            VALUE "OriginalFilename", "MuTerminal.exe"
+            VALUE "ProductVersion", "2.4.0"
+        END
+    END
+    BLOCK "VarFileInfo"
+    BEGIN
+        VALUE "Translation", 0x0, 1200
+    END
+END
+
+IDI_ICON1 ICON "MuTerminal.ico"
+
diff -Nur MuTerm/src/win32/MuTerminal.sln MuTerm_working/src/win32/MuTerminal.sln
--- MuTerm/src/win32/MuTerminal.sln	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/win32/MuTerminal.sln	Sat May 12 05:53:50 2007
@@ -0,0 +1,21 @@
+Microsoft Visual Studio Solution File, Format Version 8.00
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "MuTerminal", "MuTerminal.vcproj", "{5C049672-3C3B-40E8-AD4F-A714DE50F405}"
+	ProjectSection(ProjectDependencies) = postProject
+	EndProjectSection
+EndProject
+Global
+	GlobalSection(SolutionConfiguration) = preSolution
+		Debug = Debug
+		Release = Release
+	EndGlobalSection
+	GlobalSection(ProjectConfiguration) = postSolution
+		{5C049672-3C3B-40E8-AD4F-A714DE50F405}.Debug.ActiveCfg = Debug|Win32
+		{5C049672-3C3B-40E8-AD4F-A714DE50F405}.Debug.Build.0 = Debug|Win32
+		{5C049672-3C3B-40E8-AD4F-A714DE50F405}.Release.ActiveCfg = Release|Win32
+		{5C049672-3C3B-40E8-AD4F-A714DE50F405}.Release.Build.0 = Release|Win32
+	EndGlobalSection
+	GlobalSection(ExtensibilityGlobals) = postSolution
+	EndGlobalSection
+	GlobalSection(ExtensibilityAddIns) = postSolution
+	EndGlobalSection
+EndGlobal
diff -Nur MuTerm/src/win32/MuTerminal.vcproj MuTerm_working/src/win32/MuTerminal.vcproj
--- MuTerm/src/win32/MuTerminal.vcproj	Thu Jan  1 08:00:00 1970
+++ MuTerm_working/src/win32/MuTerminal.vcproj	Tue May 15 23:24:08 2007
@@ -0,0 +1,215 @@
+﻿<?xml version="1.0" encoding="UTF-8"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="7.10"
+	Name="MuTerminal"
+	ProjectGUID="{5C049672-3C3B-40E8-AD4F-A714DE50F405}"
+	Keyword="Win32Proj">
+	<Platforms>
+		<Platform
+			Name="Win32"/>
+	</Platforms>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="Debug"
+			IntermediateDirectory="Debug"
+			ConfigurationType="1"
+			CharacterSet="0">
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="..\..\..\etkxx;.\libiconv"
+				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;USE_ETKXX"
+				MinimalRebuild="TRUE"
+				ExceptionHandling="TRUE"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="1"
+				RuntimeTypeInfo="TRUE"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="FALSE"
+				DebugInformationFormat="4"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="etkxx.lib iconv.lib kernel32.lib user32.lib msvcrtd.lib $(NOINHERIT)"
+				OutputFile="$(OutDir)/MuTerminal.exe"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="..\..\..\etkxx\build\win32\etkxx\Debug;.\libiconv"
+				IgnoreAllDefaultLibraries="TRUE"
+				GenerateDebugInformation="TRUE"
+				ProgramDatabaseFile="$(OutDir)/MuTerminal.pdb"
+				SubSystem="1"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="Release"
+			IntermediateDirectory="Release"
+			ConfigurationType="1"
+			CharacterSet="0"
+			WholeProgramOptimization="FALSE">
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="..\..\..\etkxx;.\libiconv"
+				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;USE_ETKXX"
+				ExceptionHandling="TRUE"
+				RuntimeLibrary="0"
+				RuntimeTypeInfo="TRUE"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="FALSE"
+				DebugInformationFormat="3"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="etkxx.lib iconv.lib kernel32.lib user32.lib msvcrt.lib $(NOINHERIT)"
+				OutputFile="$(OutDir)/MuTerminal.exe"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="..\..\..\etkxx\build\win32\etkxx\Release;.\libiconv"
+				IgnoreAllDefaultLibraries="TRUE"
+				GenerateDebugInformation="TRUE"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="Source files"
+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}">
+			<File
+				RelativePath="..\AboutDlg.cpp">
+			</File>
+			<File
+				RelativePath="..\AppearPrefView.cpp">
+			</File>
+			<File
+				RelativePath="..\CodeConv.cpp">
+			</File>
+			<File
+				RelativePath="..\CurPos.cpp">
+			</File>
+			<File
+				RelativePath="..\LangPrefView.cpp">
+			</File>
+			<File
+				RelativePath="..\MenuUtil.cpp">
+			</File>
+			<File
+				RelativePath="..\MousePrefView.cpp">
+			</File>
+			<File
+				RelativePath="..\MuTerminal.cpp">
+			</File>
+			<File
+				RelativePath="..\PrefDlg.cpp">
+			</File>
+			<File
+				RelativePath="..\PrefHandler.cpp">
+			</File>
+			<File
+				RelativePath="..\PrefView.cpp">
+			</File>
+			<File
+				RelativePath="..\ShellPrefView.cpp">
+			</File>
+			<File
+				RelativePath="..\spawn.cpp">
+			</File>
+			<File
+				RelativePath="..\TermApp.cpp">
+			</File>
+			<File
+				RelativePath="..\TermBaseView.cpp">
+			</File>
+			<File
+				RelativePath="..\TermBuffer.cpp">
+			</File>
+			<File
+				RelativePath="..\TermIM.cpp">
+			</File>
+			<File
+				RelativePath="..\TermParse.cpp">
+			</File>
+			<File
+				RelativePath="..\TermView.cpp">
+			</File>
+			<File
+				RelativePath="..\TermWindow.cpp">
+			</File>
+			<File
+				RelativePath="..\TTextControl.cpp">
+			</File>
+			<File
+				RelativePath="..\UTF8WidthTbl.c">
+			</File>
+			<File
+				RelativePath="..\VTKeyTbl.c">
+			</File>
+			<File
+				RelativePath="..\VTPrsTbl.c">
+			</File>
+		</Filter>
+		<Filter
+			Name="Resource files"
+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}">
+			<File
+				RelativePath=".\MuTerminal.ico">
+			</File>
+			<File
+				RelativePath=".\MuTerminal.rc">
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>
